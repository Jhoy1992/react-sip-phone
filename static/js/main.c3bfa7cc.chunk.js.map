{"version":3,"sources":["../../src/actions/sipAccounts.ts","../../src/actions/sipSessions.ts","../../src/util/audio.ts","../../src/actions/device.ts","../../src/util/TonePlayer.ts","../../src/util/ToneManager.ts","../../src/util/sessions.ts","../../src/util/incomingSession.ts","../../src/lib/SipAccount.ts","../../src/SipWrapper.tsx","../../src/actions/config.ts","../../src/assets/settings-24px.svg","../../src/assets/mic-24px.svg","../../src/assets/volume_up-24px.svg","../../src/components/Status.tsx","../../src/components/phone/DialButton.tsx","../../src/util/buttons.ts","../../src/components/phone/Dialpad.tsx","../../src/assets/phone_paused-24px.svg","../../src/components/phone/Hold.tsx","../../src/assets/mic_off-24px.svg","../../src/components/phone/Mute.tsx","../../src/assets/arrow_forward-24px.svg","../../src/components/phone/BlindTransfer.tsx","../../src/assets/phone_in_talk-24px.svg","../../src/assets/call_end-24px.svg","../../src/components/phone/AttendedTransfer.tsx","../../src/assets/dialpad-24px.svg","../../src/components/phone/Phone.tsx","../../src/assets/call-24px.svg","../../src/components/phone/Incoming.tsx","../../src/components/PhoneSessions.tsx","../../src/components/Dialstring.tsx","../../node_modules/symbol-observable/es/index.js","../../node_modules/symbol-observable/es/ponyfill.js","../../node_modules/redux/es/redux.js","../../src/reducers/sipSessions.ts","../../src/reducers/index.ts","../../src/reducers/sipAccounts.ts","../../src/reducers/device.ts","../../src/reducers/config.ts","../../src/store/configureStore.ts","../../src/index.tsx","../../dist/settings-24px~HQuidduc.svg","../../dist/mic-24px~xExSpqQP.svg","../../dist/volume_up-24px~qJQJhpOr.svg","../../dist/phone_paused-24px~TWxpQtZf.svg","../../dist/mic_off-24px~bjejwOqd.svg","../../dist/arrow_forward-24px~UJhdZXVe.svg","../../dist/phone_in_talk-24px~DQfZjkDQ.svg","../../dist/call_end-24px~HrwYCAOf.svg","../../dist/dialpad-24px~cidqBzRK.svg","../../dist/call-24px~AGZUevvA.svg","../../dist/assets/ring.mp3","App.js","index.js"],"names":["holdCallRequest","session","SessionState","type","sessionDescriptionHandlerModifiers","payload","id","err","setRemoteAudio","deviceId","phoneStore","state","mediaElement","document","remoteStream","receiver","console","setLocalAudio","sender","audioDeviceId","navigator","audio","stream","audioTrack","cleanupMedia","sessionId","DTMF_MATRIX","1","2","3","A","4","5","6","B","7","8","9","C","0","D","Synth","Tone","FMSynth","TonePlayer","ringtone","ringback","dest","oscillator","envelope","attack","decay","sustain","release","this","time","stop","toneManager","constructor","playRing","stopAll","SessionStateHandler","stateChange","newState","setTimeout","getFullNumber","number","fullNumber","defaultCountryCode","IncomingSessionStateHandler","incomingSession","holdAll","onHolds","sessions","Object","SIPAccount","sipConfig","sipCredentials","uri","UserAgent","Error","transportOptions","server","websocket","userAgentOptions","autoStart","autoStop","noAnswerTimeout","logBuiltinEnabled","process","logConfiguration","logLevel","authorizationPassword","userAgentString","hackWssInTransport","sessionDescriptionHandlerFactoryOptions","constraints","video","alwaysAcquireMediaFirst","iceCheckingTimeout","expires","_userAgent","setupDelegate","onInvite","invitation","onRefer","referral","stateHandler","setupRegistererListener","RegistererState","makeCall","target","outgoingSession","error","SipWrapper","componentDidMount","props","initializeSip","account","render","React","actions","config","setCredentials","password","connect","require","Status","settingsMenu","mapOptions","options","list","option","value","label","handleChangeDevice","inputs","outputs","className","styles","onClick","setState","src","settingsIcon","style","width","soundIcon","placeholder","output","onChange","micIcon","input","inputArray","devices","device","getOutputAudioDevices","outputArray","primaryInput","primaryOutput","primaryAudioOutput","DialButton","letters","click","opacity","getButtonLetters","Dialpad","super","topRow","middleRow","bottomRow","x","getButton","key","text","handleClick","obj","playDTMF","sendDTMF","requestOptions","body","contentDisposition","contentType","content","open","Hold","hold","checkHoldState","onHold","includes","holdIcon","unHoldCallRequest","_session","dispatch","stateChanged","userAgent","Mute","onMute","mute","Promise","resolve","reject","sessionDescriptionHandler","pc","micOffIcon","unMuteFail","BlindTransfer","blindTransferCall","blindIcon","blindTransferFail","AttendedTransfer","attendedTransferSessionPending","attendedTransferSessionReady","attendedTransferCall","attendedTransferClear","connectAttendedTransfer","attendedTransferSession","cancelAttendedTransfer","phoneConfig","disabledButtons","connectIcon","cancelIcon","attendedIcon","closeSession","Phone","dialpadOpen","transferMenu","ended","transferDialString","attendedTransferStarted","duration","counterStarted","attendedProcess","bind","componentDidUpdate","newProps","endCall","callDisconnect","bool","handleCounter","user","status","statusMask","minutes","Math","hours","seconds","dh","dm","ds","getDurationDisplay","disabled","endCallIcon","dialpadIcon","transferIcon","e","destination","started","autoPlay","ring","Incoming","handleAccept","handleDecline","declineIcon","acceptIcon","loop","declineCall","PhoneSessions","elements","getIncomingCallReferrals","attendedTransfers","getSessions","PS","incomingCalls","Dialstring","currentDialString","handleDial","checkDialstring","length","onKeyPress","callIcon","sipAccount","result","root","Symbol","observable","ponyfill","self","window","global","module","randomString","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","proto","getPrototypeOf","getUndefinedStateErrorMessage","action","actionType","String","_defineProperty","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","push","apply","filter","sym","getOwnPropertyDescriptor","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","compose","_len","funcs","Array","_key","arg","reduce","a","b","reducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","reducer","undefined","assertReducerShape","hasChanged","nextState","_i","previousStateForKey","nextStateForKey","errorMessage","combineReducers","acceptedIncoming","declinedIncoming","newIncoming","newSessions","endHold","newHold","audioInput","audioOutput","primaryAudioInput","middleware","persistConfig","whitelist","defaultStore","createStore","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","index","indexOf","splice","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","TypeError","observeState","next","unsubscribe","$$observable","persistReducer","composeWithDevTools","middlewares","store","_dispatch","middlewareAPI","chain","map","applyMiddleware","persistor","persistStore","ReactSipPhone","height","containerStyle","loading","name","exports","urlParams","URLSearchParams","location","search","sipuri","get","App","ReactDOM","getElementById"],"mappings":"0UAGO,MCyEMA,EAAmBC,IAC9B,IACGA,EAAD,2BACAA,UAAkBC,IAFpB,YAIE,MAAO,CAAEC,KA9DN,wBAgEL,IAME,OALAF,SAAe,CACbG,mCAAoC,CAClCH,4BADkC,gBAI/B,CAAEE,KAxEN,0BAwEqCE,QAASJ,EAAQK,IACzD,MAAOC,GACP,MAAO,CAAEJ,KAxEN,0BCVMK,EAAkBP,IAC7B,MAEMQ,EAFQC,GAAd,WAEiBC,OAAjB,mBACMC,EAAeC,wBAAwBZ,EAA7C,IACMa,EAAe,IAArB,YAEAb,kEAEYc,IACJA,EAAJ,OACED,WAAsBC,EAAtBD,SAGN,EAEEF,oBAIQ,KAEJA,cAEAA,WAGJI,gCAEFN,YAAoB,CAClBP,KCpCG,4BDyCMc,EAAiBhB,IAC5B,MAEMQ,EAFQC,GAAd,WAEiBC,OAAjB,kBAEAV,iEAEW,SAAUiB,GAGjB,GAFAF,eAEIE,SAAJ,UAAoBA,aAA+B,CACjD,IAAIC,EAAJ,EAIAC,oCAIgB,CAAEC,MAAO,CAAEZ,SAAUU,KAJrCC,MAKQ,SAAUE,GACd,IAAIC,EAAaD,EAAjB,iBACAJ,eAAoBK,EAApBL,WAIVR,YAAoB,CAClBP,KCnEG,2BDuEMqB,EAAgBC,IAC3B,MAAMb,EAAeC,wBAArB,GACA,IAEED,iBAEAA,YE9EEc,EAAc,CAClBC,EAAG,CAAC,IADc,MAElBC,EAAG,CAAC,IAFc,MAGlBC,EAAG,CAAC,IAHc,MAIlBC,EAAG,CAAC,IAJc,MAKlBC,EAAG,CAAC,IALc,MAMlBC,EAAG,CAAC,IANc,MAOlBC,EAAG,CAAC,IAPc,MAQlBC,EAAG,CAAC,IARc,MASlBC,EAAG,CAAC,IATc,MAUlBC,EAAG,CAAC,IAVc,MAWlBC,EAAG,CAAC,IAXc,MAYlBC,EAAG,CAAC,IAZc,MAalBC,EAAG,CAAC,IAbc,MAclB,IAAK,CAAC,IAdY,MAelB,IAAK,CAAC,IAfY,MAgBlBC,EAAG,CAAC,IAAK,OAGLC,EAAQC,eAAkB,IAAIA,IAAJ,YAAsBA,IAAtD,OACMC,EAAUD,eAAkB,IAAIA,IAAJ,YAAsBA,IAAxD,SAiFA,MAAME,EAAN,cAKE,KAAAC,SAAYpC,IAUV,MAAMG,EAAeC,wBAArB,YACA,YAAIJ,EACF,EAGEG,oBAIO,KAELA,WAGFI,gCAIFJ,UAOJ,KAAAkC,SAAYrC,IACV,IAAIsC,EAAOL,YAAX,+BAaA,GAZA1B,eACAyB,MAAU,CACRO,WAAY,CACV7C,KAAM,QAER8C,SAAU,CACRC,OADQ,IAERC,MAFQ,GAGRC,QAHQ,GAIRC,QAAS,OARbZ,WAWA,YAAIhC,EAAwB,CAC1B,MAAMG,EAAeC,wBAArB,QAGA,KAAkB,CAChB,IAAIkC,EAAOL,YAAX,+BACAD,aAEA7B,oBAGO,KAELA,YAAyBmC,EAAzBnC,OAGAA,iBAKJ6B,aAGFa,KAAA,KAAY,IAAIZ,IAAJ,KAAea,IACzBd,gBAAoB,CAAC,IAArBA,MACAA,iBAAqB,CAAC,IAAtBA,KAAiCc,EAAjCd,IAFF,GAIAa,KAAA,cACAZ,uBAGF,KAAAc,KAAO,KACL,IACEF,KAAA,aACAZ,qBACAD,iBAAqB,CAAC,IAAtBA,MACA,SACqB5B,wBAArB,YAEAD,WCtKN,MAAM6C,EAAc,IA7BpB,MAEEC,eAEOC,SAASxD,GACd,MAEMM,EAFQC,GAAd,WAEiBC,OAAjB,mBACI2C,KAAJ,cACEA,KAAA,mBACAA,KAAA,oBAEF,aAAInD,GACFmD,KAAA,YAAmB,IAAnB,EACAA,KAAA,yBACK,YAAInD,IACTmD,KAAA,YAAmB,IAAnB,EACAA,KAAA,yBAIGM,UACDN,KAAJ,cACEA,KAAA,mBACAA,KAAA,sB,MCrBOO,EAEXH,YAAYzD,GAIL,KAAA6D,YAAeC,IACpB,UACE,KAAK7D,IAAL,aACEuD,uBACA/C,YAAoB,CAClBP,KLPH,2BKSC,MACF,KAAKD,IAAL,YACEQ,YAAoB,CAClBP,KLZH,2BKcCsD,YACAxC,EAAcqC,KAAdrC,SACAT,EAAe8C,KAAf9C,SACA,MACF,KAAKN,IAAL,YACEQ,YAAoB,CAClBP,KLpBH,2BKsBCsD,YACAjC,EAAa8B,KAAKrD,QAAlBuB,IACA,MACF,KAAKtB,IAAL,WACEQ,YAAoB,CAClBP,KL3BH,2BK6BCsD,YACAO,WAAW,KACTtD,YAAoB,CAClBP,KL/BL,gBKgCKE,QAASiD,KAAKrD,QAAQK,MAH1B0D,KAMA,MACF,QACEhD,0DAvCJsC,KAAA,WA6CG,MAAMW,EAAiBC,IAC5B,GAAIA,SAAJ,GACE,SAGF,IAAIC,EAAa,IAAH,OAAOzD,6CAAqD0D,oBAA5D,OAAd,GAKA,OAJIF,iBAAJ,KAA4BA,WAC1BC,EAAa,GAAH,OAAVA,IAEFnD,eACA,G,MCtDWqD,EAEXX,YAAYY,GAIL,KAAAR,YAAeC,IACpB,UACE,KAAK7D,IAAL,aACEQ,YAAoB,CAClBP,KNVH,2BMYC,MACF,KAAKD,IAAL,YACEQ,YAAoB,CAClBP,KNfH,2BMiBCmD,KAAA,UACArC,EAAcqC,KAAdrC,iBACAT,EAAe8C,KAAf9C,iBACA,MACF,KAAKN,IAAL,YACEQ,YAAoB,CAClBP,KNvBH,2BMyBCqB,EAAa8B,KAAKgB,gBAAlB9C,IACA,MACF,KAAKtB,IAAL,WACEQ,YAAoB,CAClBP,KN7BH,2BM+BC6D,WAAW,KACTtD,YAAoB,CAClBP,KNhCL,gBMiCKE,QAASiD,KAAKgB,gBAAgBhE,MAHlC0D,KAMA,MACF,QACEhD,0DApCJsC,KAAA,kBAyCKiB,UACL,MAAM5D,EAAQD,GAAd,WAEM8D,EAAU7D,cAAhB,OAEM8D,EAAW9D,cAAjB,SACA,cAAiC+D,eAAjC,kBAA2D,2BAAlD,EAAkD,KAA3D,EAA2D,KACzD,GACEjD,aACAA,IAAc6B,KAAKgB,gBAFrB,GAIE,IASE,OAPAtE,UAEAU,YAAoB,CAClBP,KNrDL,0BMuDKE,QAASJ,EAAQK,KAGnB,MAAOC,GACP,U,MCxDWoE,EAMnBjB,YAAYkB,EAAsBC,GAChCvB,KAAA,UACAA,KAAA,eACA,MAAMwB,EAAMC,YAAkB,OAASF,EAAvC,QACA,MACE,MAAM,IAAIG,MAAV,wBAEF,MAAMC,EAAqC,CACzCC,OAAQN,EAAUO,WAEdC,EAAqC,CACzCC,WADyC,EAEzCC,UAFyC,EAGzCC,gBAAiBX,mBAHwB,GAIzCY,mBAAmBC,EACnBC,kBAAkBD,EAClBE,SANyC,QAOzCC,sBAAuBf,EAPkB,SAQzCgB,gBARyC,sBASzCC,oBATyC,2BAYzCC,wCAAyC,CACvCC,YAAa,CACX3E,MAAO,CACLZ,SACE,WAEJwF,OAAO,GAETC,yBARuC,EASvCC,mBAAoB,MASxB7C,KAAA,WAAkB,IAAI,EAAJ,EAAlB,GACAA,KAAA,YAAmB,IAAI,EAAJ,EAAeA,KAAf,WAP0B,CAC3C8C,QAD2C,IAE3CV,kBAAkBD,IAMpBnC,KAAA,gBACAA,KAAA,wBAA6B,KAC3BA,KAAA,uBACAA,KAAA,0BAEA5C,YAAoB,CAAEP,KRtErB,gBQsE0CE,QAASiD,KAAK+C,eAI7DC,gBACEhD,KAAA,oBAA2B,CACzBiD,SAASC,GAEP,MAAMlC,EAAN,EAGAA,WAA2B,CAEzBmC,QAAQC,GACN1F,iBAIJN,YAAoB,CAAEP,KPtFvB,gBOsF4CE,QAASiE,IAEpD,MAAMqC,EAAe,IAAItC,EAAzB,GAEAC,0BAAwCqC,EAAxCrC,eAKNsC,0BACEtD,KAAA,oCAA0CS,IACxC,UACE,KAAK8C,IAAL,QACE7F,uDACA,MACF,KAAK6F,IAAL,WACE7F,uCACA,MACF,KAAK6F,IAAL,aACE7F,yCACA,MACF,KAAK6F,IAAL,WACE7F,0CAMR8F,SAAS5C,GAGP,MAAM6C,EAAShC,0BACNd,EADT,GAAec,6BAGf,KAAY,CACV/D,kCACA,MAEMgG,EAFU,IAAI,EAAJ,EAAY1D,KAAZ,WAAhB,GAIA0D,WAA2B,CAEzBP,QAAQC,GAEN1F,YAAY,aAAZA,KAGJN,YAAoB,CAAEP,KPvIrB,cOuIwCE,QAAS2G,IAElD,MAAML,EAAe,IAAI9C,EAAzB,GACAmD,0BAAwCL,EAAxCK,aACAA,gBAEQ,KACJhG,8BAHJgG,MAKUC,IACNjG,sBAGJA,4ECpIN,MAAMkG,UAAmB,EAAzB,UAEEC,oBACEnG,uBACIsC,KAAK8D,MAAMvC,eAAf,UACEvB,KAAA,gBAIJ+D,gBACE,MAAMC,EAAU,IAAI3C,EAAWrB,KAAK8D,MAApB,UAAqC9D,KAAK8D,MAA1D,gBACA9D,KAAA,uBAGFiE,SACE,OAAOC,wCACHlE,KAAK8D,MADT,WAKJ,MACMK,EAAU,eTlCcH,IACrB,CAAEnH,KAHJ,cAGuBE,QAASiH,ISiCvB,eC/BeI,IACtB,CAAEvH,KAPJ,aAOsBE,QAASqH,IDiCpCC,eCtC4B,CAAC7C,EAAD,GAAmB8C,EAAnB,MACrB,CAAEzH,KAJJ,kBAI2BE,QAAS,OAAMuH,eDuCjD,MAAeC,YANS,KAAM,IAMfA,GAAf,G,kRE5CA,EAAeC,EAAf,ICAA,EAAeA,EAAf,ICAA,EAAeA,EAAf,ICoBA,MAAMC,UAAe,EAArB,wB,oBACE,KAAApH,MAAQ,CAAEqH,cAAc,GAExBb,oBACE7D,KAAA,6BACAA,KAAA,8BAEF2E,WAAWC,GACT,MAAMC,EAAN,GAIA,OAHAD,MAAaE,IACXD,OAAU,CAAEE,MAAOD,EAAT,SAA0BE,MAAOF,EAAOE,UAEpD,EAEFC,mBAAmBpI,EAAD,GAChB,QAAIA,EACFmD,KAAA,0BAEAA,KAAA,yBAGJiE,SAAM,MACE,EAAN,KAAM,MAAS5G,EAAf,KAAeA,MACT6H,EAASlF,KAAK2E,WAAWb,EAA/B,QACMqB,EAAUnF,KAAK2E,WAAWb,EAAhC,SACA,OACE,wCACE,+BAAKsB,UAAWC,GACd,+BAAKD,UAAWC,GAAqBvB,EADvC,MAEE,+BACE9G,GAAIqI,EACJD,UAAW/H,eAAqBgI,EAAY,GAC5CC,QAAS,IAAMtF,KAAKuF,SAAS,CAAEb,cAAerH,EAAMqH,gBAEpD,+BAAKc,IAAKC,MAGd,+BACEzI,GAAIqI,EACJD,UAAW/H,kBAA0BgI,GAErC,8BAAIK,MAAO,CAAEC,MAAO,UACpB,+BAAKP,UAAWC,GACd,+BAAKD,UAAWC,EAAqBG,IAAKI,IAC1C,6BACEC,YAAY,mBACZd,MAAOI,OAAcW,GAAgBA,UAAiBhC,EAA/CqB,gBAAuE,KAC9EY,SAAUjB,GAAU9E,KAAKiF,mBAAmB,MAAOH,EAA/B,OACpBF,QAASO,EACTnI,GAAIqI,KAGR,+BAAKD,UAAWC,GACd,+BAAKD,UAAWC,EAAqBG,IAAKQ,IAC1C,6BACEH,YAAY,kBACZd,MAAOG,OAAae,GAAeA,UAAgBnC,EAA5CoB,cACPa,SAAUjB,GAAU9E,KAAKiF,mBAAmB,KAAMH,EAA9B,OACpBF,QAASM,EACTlI,GAAIqI,KAGR,8BAAIK,MAAO,CAAEC,MAAO,aAM9B,MAOMxB,EAAU,iBX7CgBnH,IAEvB,CACLH,KAhDG,oBAiDHE,QAASC,IWyCG,iBXrDiBA,IAExB,CACLH,KAzCG,qBA0CHE,QAASC,IWiDG,qBXvFoB,KAClC,IAAIkJ,EAAJ,GAUA,OATApI,gDAEQ,SAAUqI,GACdA,WAAgB,SAAUC,GACxB,eAAIA,QACFF,gBAID,CACLrJ,KApBG,+BAqBHE,QAASmJ,IW8EXG,sBX1EmC,KACnC,IAAIC,EAAJ,GAUA,OATAxI,gDAEQ,SAAUqI,GACdA,WAAgB,SAAUC,GACxB,gBAAIA,QACFE,gBAID,CACLzJ,KApCG,gCAqCHE,QAASuJ,KW+Db,MAAe/B,YAbUlH,IAAD,CACtB6H,OAAQ7H,SAD+B,WAEvC8H,QAAS9H,SAF8B,YAGvCkJ,aAAclJ,SAHyB,kBAIvCmJ,cAAenJ,SAAaoJ,qBASflC,GAAf,G,ocC7FA,MAAMmC,GAAa,EAAC,eAAeC,aAC1B,+BAAK3J,GAAG,kBACboI,UAAWC,EACXC,QAAS,IAAMsB,KAFV,EAIL,+BAAKlB,MAAO,CAACmB,QAASF,UAAsB,GAAIvB,UAAWC,IAJ7D,ICVWyB,GAAoB/B,IAC/B,UACE,QACE,UACF,QACE,YACF,QACE,YACF,QACE,YACF,QACE,YACF,QACE,YACF,QACE,aACF,QACE,YACF,QACE,aACF,QACE,UACF,QACE,WCTN,MAAMgC,WAAgB,EAAtB,UAKE3G,YAAY0D,GACVkD,MAAA,GALF,KAAAC,OAAA,GACA,KAAAC,UAAA,GACA,KAAAC,UAAA,GAIE,IAAK,IAAIC,EAAT,EAAgBA,EAAhB,EAAuBA,IACrBpH,KAAA,YAAiBA,KAAKqH,UAAUD,EAAhC,aAEF,IAAK,IAAIA,EAAT,EAAgBA,EAAhB,EAAuBA,IACrBpH,KAAA,eAAoBA,KAAKqH,UAAUD,EAAnC,aAEF,IAAK,IAAIA,EAAT,EAAgBA,EAAhB,GAAwBA,IACtBpH,KAAA,eAAoBA,KAAKqH,UAAUD,EAAnC,aAIJC,UAAUtC,GACR,OACE,4BACEuC,IAAKvC,EACLwC,KAAMxC,EACN4B,QAASG,GAAiB/B,GAC1B6B,MAAO,IAAM5G,KAAKwH,YAAYzC,KAKpCyC,YAAYzC,GACN/E,KAAK8D,MAAMnH,QAAQU,QAAUT,IAAjC,cACEoD,KAAA,YbpBkB,EAACsH,EAAD,KACtB,IAAIG,EAAMrJ,EAAV,GAiBA,GAhBA,GACEV,uCAEFyB,mBACAA,MAAU,CACRO,WAAY,CACV7C,KAAM,QAER8C,SAAU,CACRC,OADQ,IAERC,MAFQ,GAGRC,QAHQ,GAIRC,QAAS,OAIb,YAAI5C,EAAwB,CAC1B,MAAMG,EAAeC,wBAArB,QAGA,KAAkB,CAChB,IAAIkC,EAAOL,YAAX,+BACAD,aAEA7B,oBAGO,KAELA,YAAyBmC,EAAzBnC,OAGAA,iBAMJ6B,aAGFA,8BatBIuI,CAAS3C,EAAO/E,KAAK8D,MAArB4D,WAIJC,SAAS5C,GACP,MAAMH,EAAU,CACdgD,eAAgB,CACdC,KAAM,CACJC,mBADI,SAEJC,YAFI,yBAGJC,QAAS,UAAF,OAAYjD,EAAZ,wBAIb/E,KAAA,sBAGFiE,SACE,OACE,+BAAKmB,UAAWpF,KAAK8D,MAAMmE,KAAO,GAAK5C,EAAerI,GAAIqI,GACxD,+BAAKD,UAAWC,IAAoBrF,KADtC,QAEE,+BAAKoF,UAAWC,IAAoBrF,KAFtC,WAGE,+BAAKoF,UAAWC,IAAoBrF,KAHtC,WAIE,+BAAKoF,UAAWC,IACbrF,KAAKqH,UADR,KAEGrH,KAAKqH,UAFR,KAGGrH,KAAKqH,UARZ,QAqBJ,OAAe9C,YANUlH,IAAD,CACtBF,SAAUE,SAAaoJ,qBAEzB,GAGelC,CAAf,ICpFA,GAAeC,EAAf,ICiBA,MAAM0D,WAAa,EAAnB,UACEC,OACMnI,KAAJ,iBACEA,KAAA,wBAA6BA,KAAK8D,MAAlC,QAAiD9D,KAAK8D,MAAtD,OAAoE9D,KAAK8D,MAAzE,UAEA9D,KAAA,sBAA2BA,KAAK8D,MAAhC,SAKJsE,iBACE,OAAOpI,KAAK8D,MAAMuE,OAAOC,SAAStI,KAAK8D,MAAMnH,QAA7C,IAGFsH,SACE,OACE,kCAAQmB,UAAWpF,KAAKoI,iBAAmB/C,GAAY,GAAIrI,GAAIqI,GAAqBC,QAAS,IAAMtF,KAAKmI,QACtG,+BAAK3C,IAAK+C,OAMlB,MAMMpE,GAAU,mBAEdqE,kBlB+C+B,CAACC,EAAD,MAAmEC,IAGlG,cAAiCtH,eAAjC,kBAA2D,2BAAlD,EAAkD,KAA3D,EAA2D,KACzD,GACEjD,aACAA,IAAcsK,EAFhB,GAME,IACE9L,SAAe,CACbG,mCAAoC,CAClCH,4BADkC,gBAItC+L,EAAS,CAAE7L,KA/FZ,0BA+F2CE,QAASJ,EAAQK,KAC3D,MAAOC,GACPyL,EAAS,CAAE7L,KA/FZ,0BAqGL,IACE4L,WACAC,EAAS,CAAE7L,KAtGR,4BAsGyCE,QAAS0L,EAASzL,KAC9D,MAAOC,GACPyL,EAAS,CAAE7L,KAtGR,8BkB8BP,OAAe0H,YAXUlH,IAAD,CACtBsL,aAActL,cADyB,aAEvC8D,SAAU9D,cAF6B,SAGvCuL,UAAWvL,cAH4B,UAIvCgL,OAAQhL,cAAkBgL,SAOb9D,IAAf,ICnDA,GAAeC,EAAf,IC2BA,MAAMqE,WAAa,EAAnB,wB,oBACE,KAAAxL,MAAQ,CACNyL,QAAQ,GAGVC,OACE,OAAI/I,KAAK3C,MAAT,QACE2C,KAAA,sBACO,IAAIgJ,QAAQ,CAACC,EAASC,KAC3B,IACGlJ,KAAK8D,MAAMnH,QAAZ,2BACAqD,KAAK8D,MAAMnH,QAAQU,QAAUT,IAF/B,YAME,OAFAoD,KAAA,wBACAkJ,wBAGF,IAYE,OATElJ,KAAK8D,MAAMnH,QAAQwM,0BAFrB,eAGAC,sBAAwB,SAAUpL,GAC5BA,SAAJ,UAAoBA,eAClBA,uBAGJgC,KAAA,sBACAA,KAAA,SAAc,CAAE8I,QAAQ,SACxBG,IAEA,MAAOhM,GAGP,OAFA+C,KAAA,wBACAkJ,SAMDlJ,KAAK3C,MAAV,YAgCA2C,KAAA,iBA/BS,IAAIgJ,QAAQ,CAACC,EAASC,KAC3B,IACGlJ,KAAK8D,MAAMnH,QAAZ,2BACAqD,KAAK8D,MAAMnH,QAAQU,QAAUT,IAF/B,YAME,OAFAoD,KAAA,sBACAkJ,wBAGF,IACElJ,KAAA,oBACA,MAAMoJ,EAEJpJ,KAAK8D,MAAMnH,QAAQwM,0BAFrB,eAYA,OATAzL,YAAY0L,EAAZ1L,cACA0L,wBAAwB,SAAUpL,GAC5BA,SAAJ,UAAoBA,eAClBA,uBAGJgC,KAAA,oBACAA,KAAA,SAAc,CAAE8I,QAAQ,SACxBG,IAEA,MAAOhM,GAGP,OAFA+C,KAAA,sBACAkJ,QASRjF,SACE,OACE,+BACEmB,UAAWpF,KAAK3C,MAAMyL,OAASzD,GAAY,GAC3CrI,GAAIqI,GAAqBC,QAAS,IAAMtF,KAAK+I,QAC7C,+BAAKvD,IAAK6D,OAMlB,MAKMlF,GAAU,apBgEW,IAAOuE,IAChCA,EAAS,CACP7L,KAhKG,6BoB8FS,YpBsEW,IAAO6L,IAChCA,EAAS,CACP7L,KArKG,6BoB6FS,SpB4EQ,IAAO6L,IAC7BA,EAAS,CACP7L,KA1KG,0BoB4FS,cpBkFa,IAAO6L,IAClCA,EAAS,CACP7L,KA/KG,+BoB2FS,cpBwFa,IAAO6L,IAClCA,EAAS,CACP7L,KApLG,+BoBgGLyM,WpBwFwB,IAAOZ,IAC/BA,EAAS,CACP7L,KAzLG,6BoBkGP,OAAe0H,YAdUlH,IAAD,CACtBsL,aAActL,cADyB,aAEvC8D,SAAU9D,cAF6B,SAGvCuL,UAAWvL,cAAkBuL,YAWhBrE,IAAf,IC9HA,GAAeC,EAAf,ICsBA,MAAM+E,WAAsB,EAA5B,UACEC,oBACExJ,KAAA,6BACA,MAAMyD,EAAShC,0BACNd,EAAcX,KAAK8D,MAD5B,aAAerC,6BAGf,KACE,IACEzB,KAAA,uBACAA,KAAA,6BACA,MAAO/C,GACPS,oBAGFsC,KAAA,0BAIJiE,SACE,OACE,wCACE,kCACEmB,UAAWC,GACXC,QAAS,IAAMtF,KAAKwJ,qBAEpB,+BAAKhE,IAAKiE,QAOpB,MAKMtF,GAAU,sBtBqEoB,IAAOuE,IACzCA,EAAS,CACP7L,KApGG,uCsB6BS,qBtB2EoB,IAAO6L,IACzCA,EAAS,CACP7L,KAxGG,uCsB8BL6M,kBtB8E+B,IAAOhB,IACtCA,EAAS,CACP7L,KA5GG,qCsB+BP,OAAe0H,YAXUlH,IAAD,CACtBsL,aAActL,cADyB,aAEvC8D,SAAU9D,cAF6B,SAGvCuL,UAAWvL,cAAkBuL,YAQhBrE,IAAf,ICjEA,GAAeC,EAAf,ICAA,GAAeA,EAAf,ICsCA,MAAMmF,WAAyB,EAA/B,wB,oBACE,KAAAtM,MAAQ,CACNuM,+BADM,KAENC,6BAA8B,MAGhCC,uBACE9J,KAAA,UACAA,KAAA,gCACA,MAAMyD,EAAShC,0BACNd,EAAcX,KAAK8D,MAD5B,aAAerC,6BAGf,KAAY,CACV,MACMiC,EADU,IAAI,EAAJ,EAAY1D,KAAK8D,MAAjB,UAAhB,GAEA1G,YAAoB,CAAEP,KzBlDrB,wByBkDkDE,QAAS2G,IAC5D1D,KAAA,SAAc,CAAE4J,+BAAgClG,IAEhDA,0BAAyCjD,IACvC,UACE,KAAK7D,IAAL,QACA,KAAKA,IAAL,aACEoD,KAAA,oBAAiC0D,EAAjC,IAEA1D,KAAA,gCAEA,MACF,KAAKpD,IAAL,YACEoD,KAAA,SAAc,CAAE6J,6BAA8BnG,IAC9C1D,KAAA,8BAEAA,KAAA,SAAc,CAAE4J,gCAAgC,IAChD5J,KAAA,oBAAiC0D,EAAjC,IAEA,MACF,KAAK9G,IAAL,YACEoD,KAAA,oBAAiC0D,EAAjC,IACA,MACF,KAAK9G,IAAL,WACEoD,KAAA,oBAAiC0D,EAAjC,IACA1D,KAAA,wBAEAU,WAAW,KACTV,KAAA,mBAAwB0D,EAAxB,KADFhD,KAGA,MACF,QACEhD,2DAINgG,iBAAgCC,IAC9B3D,KAAA,6BACAtC,sBAGFsC,KAAA,6BAKJ+J,wBACE/J,KAAA,SAAc,CAAE4J,+BAAgC,OAChD5J,KAAA,SAAc,CAAE6J,6BAA8B,OAC9C7J,KAAA,kBAIFgK,wBAAwBC,GACtB,IACEjK,KAAA,uBACAA,KAAA,gCAEAA,KAAA,SAAc,CAAE6J,6BAA8B,OAC9C,MAAO5M,GACPS,gBAIJwM,uBAAuBD,GACrBA,WACAjK,KAAA,+BAEAA,KAAA,SAAc,CAAE4J,+BAAgC,OAChD5J,KAAA,SAAc,CAAEiK,wBAAyB,OAG3ChJ,UACE,MAGMC,EAHQ9D,GAAd,WAGgBC,YAAhB,OAKA,GAAI2C,KAAK8D,MAAMnH,QAAQK,MAAMkE,KAA7B,EACE,IAIE,YAFAlB,KAAA,sBAA2BA,KAAK8D,MAAhC,SAGA,MAAO7G,GACP,QAKNgH,SACE,OAAIjE,KAAK3C,MAAT,6BAEI,wCAEE,4BAAOV,QAASqD,KAAK3C,MAAMwM,6BAA8BM,YAAa,CAAEC,gBAAiB,CAAC,SAAU,eAEpG,kCACEhF,UAAWC,GACXC,QAAS,KACPtF,KAAA,kBACAA,KAAA,wBAA6BA,KAAK3C,MAAlC,gCAEF,+BAAKmI,IAAK6E,OAKPrK,KAAK3C,MAAT,+BAEH,kCACE+H,UAAWC,GACXC,QAAS,KACPtF,KAAA,kBACAA,KAAA,uBAA4BA,KAAK3C,MAAjC,kCAEF,+BAAKmI,IAAK8E,MAKZ,kCACElF,UAAWC,GACXC,QAAS,KACPtF,KAAA,kBACAA,KAAA,yBAEF,+BAAKwF,IAAK+E,OAOpB,MAKMpG,GAAU,2CzBjDuB,IAAOuE,IAC5CA,EAAS,CACP7L,KAhHG,0CyB+JS,uBzB3CsB,IAAO6L,IAC3CA,EAAS,CACP7L,KAhHG,yCyByJS,sBzBrCqB,IAAO6L,IAC1CA,EAAS,CACP7L,KAxHG,wCyB2JS,wBzB/BuB,IAAO6L,IAC5CA,EAAS,CACP7L,KAhIG,0CyB6JS,wBzBzBuB,IAAO6L,IAC5CA,EAAS,CACP7L,KA9HG,0CyBqJS,qBzBpBoB,IAAO6L,IACzCA,EAAS,CACP7L,KArIG,uCyBuJS,YzBlJW,CAAC4D,EAAD,IAAyCiI,IAClEA,EAAS,CACP7L,KA1CG,yBA2CHE,QAAS,CAAEM,MAAF,EAAmBL,SyBwJ9BwN,azBpJ2BxN,GAAgB0L,IAC3CA,EAAS,CACP7L,KAhDG,gBAiDHE,QAASC,MyBoJb,OAAeuH,YAjBUlH,IAAD,CACtBsL,aAActL,cADyB,aAEvC8D,SAAU9D,cAF6B,SAGvCuL,UAAWvL,cAAkBuL,YAchBrE,IAAf,IC/MA,GAAeC,EAAf,ICwBA,MAAMiG,WAAc,EAApB,UAWErK,YAAY0D,GACVkD,MAAA,GAXF,KAAA3J,MAAQ,CACNqN,aADM,EAENC,cAFM,EAGNC,OAHM,EAINC,mBAJM,GAKNC,yBALM,EAMNC,SANM,EAONC,gBAAgB,GAKhBhL,KAAA,gBAAuBA,KAAKiL,gBAAgBC,KAA5ClL,MAGFmL,mBAAmBC,GACbA,kBAA2BxO,IAA3BwO,aAAwDpL,KAAK3C,MAAjE,gBACE2C,KAAA,gBAGAoL,kBAA2BxO,IAA3BwO,aADF,IAEEpL,KAAK3C,MAAMuN,OAEX5K,KAAA,SAAc,CAAE4K,OAAO,IAI3BS,UACMrL,KAAK8D,MAAMnH,QAAQU,QAAUT,IAAjC,YACEoD,KAAA,oBAEAA,KAAK8D,MAAMnH,QAAQU,QAAUT,IAA7B,SACAoD,KAAK8D,MAAMnH,QAAQU,QAAUT,IAFxB,eAILuD,YxBWyBhD,KAK7B,GAJAkC,gBAAsB,CAAC,KAAvBA,cACAA,iBAAuB,CAAC,KAAxBA,eACAA,gBAAsB,CAAC,KAAvBA,eACAA,iBAAuB,CAAC,KAAxBA,eACA,YAAIlC,EAAwB,CAC1B,MAAMG,EAAeC,wBAArB,QAGA,KAAkB,CAChB,IAAIkC,EAAOL,YAAX,+BACAD,aAEA7B,oBAGO,KAELA,YAAyBmC,EAAzBnC,OAGAA,iBAQJ+B,cwBvCEiM,CAAetL,KAAK8D,MAApBwH,UAGAtL,KAAA,wBAGFA,KAAA,SAAc,CAAE4K,OAAO,IACvBlK,WAAW,KACTV,KAAA,wBACAA,KAAA,cAAmBA,KAAK8D,MAAMnH,QAA9B,KAFF+D,KAMFuK,gBAAgBM,GACdvL,KAAA,SAAc,CAAE8K,wBAAyBS,IAG3CC,gBACMxL,KAAK8D,MAAMnH,SAAWqD,KAAK8D,MAAMnH,QAAQU,QAAUT,IAAvD,cACE,IAAIoD,KAAK3C,MAAM2N,gBACbhL,KAAA,SAAc,CAAEgL,gBAAgB,IAElCtK,WAAW,KACTV,KAAA,SAAc,CAAE+K,SAAU/K,KAAK3C,MAAM0N,SAAW,IAChD/K,KAAA,iBAFFU,MAOJuD,SAAM,MACE,EAAN,KAAM,MAASH,EAAf,KAAeA,MACf,OACE,wCACE,8BAAI4B,MAAO,CAAEC,MAAO,UACpBzB,6CAEKJ,oCAAwC2H,KAF7CvH,cAEuDJ,yBAJzD,eAMEI,6BANF,MAOEA,mCtBjCmBwH,KACzB,UACE,kBACE,kBACF,mBACE,mBACF,cACE,gBACF,kBACA,iBACE,cACF,QACE,yBsBqBQC,CAAW7H,UAPnB,QAQEI,6BARF,MASIlE,KAAK8D,MAAMnH,QAAQU,QAAUT,IAA7B,SACAoD,KAAK8D,MAAMnH,QAAQU,QAAUT,IAD9B,kBAEQsH,mCtBrBkB6G,KACjC,IAAIa,EAAUC,WAAWd,EAAzB,IACIe,EAAQD,WAAWD,EAAvB,IACAA,MACA,IACA,MADIG,EAAUhB,EAAd,GAuBA,OApBEiB,EADEF,GAASA,EAAb,GACO,IAAH,OAAFE,EAAE,KACOF,EACJ,GAAH,OAAFE,EAAE,KAEFA,MAGAC,EADEL,GAAWA,EAAf,GACO,IAAH,OAAFK,EAAE,KACOL,EACJ,GAAH,OAAFK,EAAE,KAEFA,MAGAC,EADEH,GAAWA,EAAf,GACO,IAAH,OAAFG,GACSH,EACJ,GAAH,OAAFG,GAEAA,KAEF,UAAUJ,EAAQE,EAAK,IAAvB,OAA4BC,GAA5B,WsBNqBE,CAAmBnM,KAAK3C,MAXzC,WAcIA,aACE,wCACE,4BAAS4K,KAAM5K,EAAMqN,YAAa/N,QAASmH,EAAMnH,UACjD,+BAAKyI,UAAWC,IACbvB,oDACC,4BAAMnH,QAASmH,EAAMnH,UACvB,kCACEyI,UAAWC,GACX+G,SAAU/O,EAAMuN,MAChBtF,QAAS,IAAMtF,KAAKqL,WAEpB,+BAAK7F,IAAK6G,MAEXvI,oDACC,4BAAMnH,QAASmH,EAAMnH,UACtBmH,sDACC,+BACE9G,GAAIqI,GACJD,UAAW/H,cAAoBgI,GAAY,GAC3CC,QAAS,IAAMtF,KAAKuF,SAAS,CAAEmF,aAAcrN,EAAMqN,eAEnD,+BAAKlF,IAAK8G,MAEbxI,wDACC,+BACE9G,GAAIqI,GACJD,UAAW/H,eAAqBgI,GAAY,GAC5CC,QAAS,IAAMtF,KAAKuF,SAAS,CAAEoF,cAAetN,EAAMsN,gBAEpD,+BAAKnF,IAAK+G,MAEd,+BACEvP,GAAIqI,GACJD,UAAW/H,kBAA0BgI,GAErC,iCACErI,GAAIqI,GACJU,SAAWyG,GACTxM,KAAKuF,SAAS,CAAEsF,mBAAoB2B,SAASzH,QAE/Cc,YAAY,sCAEb7F,KAAK3C,MAAMyN,wBAA0B,KACpC,4BACE2B,YAAapP,EAAMwN,mBACnBlO,QAASmH,EAAMnH,UAEnB,4BACE+P,QAAS1M,KAAKiL,gBACdwB,YAAapP,EAAMwN,mBACnBlO,QAASmH,EAAMnH,YAIrB,iCAAOK,GAAIgD,KAAK8D,MAAMnH,QAAQK,GAAI2P,UAAQ,OAQxD,MAOMxI,GAAU,CACdkH,Q3BzGsBlN,IACf,CAAEtB,KA9DJ,gBA8DyBE,QAASoB,K2B0GzC,OAAeoG,YAVUlH,IAAD,CACtBsL,aAActL,cADyB,aAEvC8D,SAAU9D,cAF6B,SAGvCuL,UAAWvL,cAH4B,UAIvCF,SAAUE,SAAaoJ,qBAMVlC,IAAf,IClLA,GAAeC,EAAf,ICQA,MAAMoI,GAAOpI,EAAb,IAOA,MAAMqI,WAAiB,EAAvB,UAEEhJ,oBACEnG,mCACAA,YAAYsC,KAAK8D,MAAjBpG,SACAyC,YACAA,uBAIF2M,eACE3M,YACAH,KAAA,uBACAA,KAAA,iBAAsBA,KAAK8D,MAA3B,SAIFiJ,gBACE5M,YACAH,KAAA,uBACAA,KAAA,kBAAuBA,KAAK8D,MAA5B,SAGFG,SACE,MAAMH,EAAQ9D,KAAd,MACA,OAAO,+BAAKhD,GAAIqI,GAAT,oBAEUvB,oCAAwC2H,KAFlD,cAE4D3H,yBAF5D,cAIL,+BAAKsB,UAAWC,GAAsBC,QAAS,IAAMtF,KAAK+M,iBAAkB,+BAAKvH,IAAKwH,MACtF,+BAAK5H,UAAWC,GAAwBC,QAAS,IAAMtF,KAAK8M,gBAAiB,+BAAKtH,IAAKyH,MACvF,iCAAOjQ,GAAG,WAAWkQ,MAAI,GACvB,kCAAQ1H,IAAKoH,GAAM/P,KAAK,gBAE1B,iCAAOG,GAAIgD,KAAK8D,MAAMnH,QAAQK,GAAI2P,UAAQ,MAKhD,MAGMxI,GAAU,Y7BMWxH,IAClB,CAAEE,KA1DJ,cA0DuBE,QAASJ,I6BNzBwQ,Y7BScxQ,IACnB,CAAEE,KA7DJ,eA6DwBE,QAASJ,K6BRxC,OAAe4H,YANUlH,IAAD,CACtBsL,aAActL,cAAkBsL,eAKnBpE,IAAf,IC7BA,MAAM6I,WAAsB,EAA5B,UACEnJ,SACE,OAAOC,wCAjBuB/C,KAChC,MAAMkM,EAAN,GACA,IAAK,MAAL,OACEA,OAAc,4BAAU1Q,QAASwE,EAASxE,GAAU2K,IAAK3K,KAE3D,UAgBK2Q,CAAyBtN,KAAK8D,MAJ1BI,eA5BS,EAAC/C,EAAD,OAClB,MAAMkM,EAAN,GACA,IAAK,MAAL,OACME,WAAJ,IACAF,OACE,4BAAO1Q,QAASwE,EAASxE,GAAU2K,IAAK3K,EAASwN,YAAaA,KAGlE,UAyBKqD,CAAYxN,KAAK8D,MAAN,SAAsB9D,KAAK8D,MAA3B,YAA8C9D,KAAK8D,MALjE,qBASJ,MAKM2J,GAAKlJ,YALclH,IAAD,CACtB8D,SAAU9D,cAD6B,SAEvCqQ,cAAerQ,cAFwB,cAGvCkQ,kBAAmBlQ,cAAkBkQ,oBAE5BhJ,CAAX,I,wHCtCA,MAAMoJ,WAAmB,EAAzB,wB,oBACE,KAAAtQ,MAAQ,CACNuQ,kBAAmB,IAErBC,aACO7N,KAAL,mBACEA,KAAA,oCAAkCA,KAAK3C,MAAvC,oBAGJyQ,kBACE,WAAO9N,KAAK3C,MAAMuQ,kBAAkBG,OAGtC9J,SACE,OACE,+BAAKmB,UAAWC,IACd,iCACED,UAAWC,GACX2I,WAAaxB,IACX,UAAIA,QACFxM,KAAA,aACAwM,qBAGJ3G,YAAY,8BACZE,SAAWyG,GAAMxM,KAAKuF,SAAS,CAAEqI,kBAAmBpB,SAASzH,UAE/D,kCACEK,UAAWC,GACX+G,SAAUpM,KAAK8N,kBACfxI,QAAS,IAAMtF,KAAK6N,cAEpB,+BAAKrI,IAAKyI,QAOpB,MAOM/O,GAAIqF,YAPelH,IAAD,CACtB6Q,WAAY7Q,cAAkB6Q,aAGhC,GAGU3J,CAAV,ICrDA,IAcI4J,GCjBW,SAAkCC,GAChD,IAAID,EACAE,EAASD,EAAKC,OAalB,MAXsB,oBAAXA,EACNA,EAAOC,WACVH,EAASE,EAAOC,YAEhBH,EAASE,EAAO,cAChBA,EAAOC,WAAaH,GAGrBA,EAAS,eAGHA,EDEKI,CAZO,qBAATC,KACFA,KACoB,qBAAXC,OACTA,OACoB,qBAAXC,EACTA,EAEAC,GEJLC,GAAe,WACjB,OAAO/C,KAAKgD,SAASC,SAAS,IAAIC,UAAU,GAAGC,MAAM,IAAIC,KAAK,MAG5DC,GAAc,CAChBC,KAAM,eAAiBP,KACvBQ,QAAS,kBAAoBR,KAC7BS,qBAAsB,WACpB,MAAO,+BAAiCT,OAQ5C,SAASU,GAAc7H,GACrB,GAAmB,kBAARA,GAA4B,OAARA,EAAc,OAAO,EAGpD,IAFA,IAAI8H,EAAQ9H,EAE4B,OAAjCrG,OAAOoO,eAAeD,IAC3BA,EAAQnO,OAAOoO,eAAeD,GAGhC,OAAOnO,OAAOoO,eAAe/H,KAAS8H,EA4SxC,SAASE,GAA8BnI,EAAKoI,GAC1C,IAAIC,EAAaD,GAAUA,EAAO7S,KAElC,MAAO,UADiB8S,GAAc,WAAcC,OAAOD,GAAc,KAAQ,aAC3C,cAAiBrI,EAAhD,iLA6LT,SAASuI,GAAgBpI,EAAKH,EAAKvC,GAYjC,OAXIuC,KAAOG,EACTrG,OAAO0O,eAAerI,EAAKH,EAAK,CAC9BvC,MAAOA,EACPgL,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZxI,EAAIH,GAAOvC,EAGN0C,EAGT,SAASyI,GAAQC,EAAQC,GACvB,IAAIC,EAAOjP,OAAOiP,KAAKF,GASvB,OAPI/O,OAAOkP,uBACTD,EAAKE,KAAKC,MAAMH,EAAMjP,OAAOkP,sBAAsBH,IAGjDC,IAAgBC,EAAOA,EAAKI,QAAO,SAAUC,GAC/C,OAAOtP,OAAOuP,yBAAyBR,EAAQO,GAAKX,eAE/CM,EAGT,SAASO,GAAenN,GACtB,IAAK,IAAIoN,EAAI,EAAGA,EAAIC,UAAU/C,OAAQ8C,IAAK,CACzC,IAAIE,EAAyB,MAAhBD,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNX,GAAQa,GAAQ,GAAMC,SAAQ,SAAU1J,GACtCuI,GAAgBpM,EAAQ6D,EAAKyJ,EAAOzJ,OAE7BlG,OAAO6P,0BAChB7P,OAAO8P,iBAAiBzN,EAAQrC,OAAO6P,0BAA0BF,IAEjEb,GAAQa,GAAQC,SAAQ,SAAU1J,GAChClG,OAAO0O,eAAerM,EAAQ6D,EAAKlG,OAAOuP,yBAAyBI,EAAQzJ,OAKjF,OAAO7D,EAaT,SAAS0N,KACP,IAAK,IAAIC,EAAON,UAAU/C,OAAQsD,EAAQ,IAAIC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAChFF,EAAME,GAAQT,UAAUS,GAG1B,OAAqB,IAAjBF,EAAMtD,OACD,SAAUyD,GACf,OAAOA,GAIU,IAAjBH,EAAMtD,OACDsD,EAAM,GAGRA,EAAMI,QAAO,SAAUC,EAAGC,GAC/B,OAAO,WACL,OAAOD,EAAEC,EAAEnB,WAAM,EAAQM,gBC3kB/B,MCNMc,GFyYN,SAAyBA,GAIvB,IAHA,IAAIC,EAAczQ,OAAOiP,KAAKuB,GAC1BE,EAAgB,GAEXjB,EAAI,EAAGA,EAAIgB,EAAY9D,OAAQ8C,IAAK,CAC3C,IAAIvJ,EAAMuK,EAAYhB,GAElB,EAMyB,oBAAlBe,EAAStK,KAClBwK,EAAcxK,GAAOsK,EAAStK,IAIlC,IASIyK,EATAC,EAAmB5Q,OAAOiP,KAAKyB,GAWnC,KAjEF,SAA4BF,GAC1BxQ,OAAOiP,KAAKuB,GAAUZ,SAAQ,SAAU1J,GACtC,IAAI2K,EAAUL,EAAStK,GAKvB,GAA4B,qBAJT2K,OAAQC,EAAW,CACpCrV,KAAMqS,GAAYC,OAIlB,MAAM,IAAIzN,MAAM,YAAe4F,EAAf,iRAGlB,GAEO,qBAFI2K,OAAQC,EAAW,CAC5BrV,KAAMqS,GAAYG,yBAElB,MAAM,IAAI3N,MAAM,YAAe4F,EAAf,6EAA0G4H,GAAYC,KAAtH,kTAoDlBgD,CAAmBL,GACnB,MAAOtF,GACPuF,EAAsBvF,EAGxB,OAAO,SAAqBnP,EAAOqS,GAKjC,QAJc,IAAVrS,IACFA,EAAQ,IAGN0U,EACF,MAAMA,EAcR,IAX2C,IAQvCK,GAAa,EACbC,EAAY,GAEPC,EAAK,EAAGA,EAAKN,EAAiBjE,OAAQuE,IAAM,CACnD,IAAIf,EAAOS,EAAiBM,GACxBL,EAAUH,EAAcP,GACxBgB,EAAsBlV,EAAMkU,GAC5BiB,EAAkBP,EAAQM,EAAqB7C,GAEnD,GAA+B,qBAApB8C,EAAiC,CAC1C,IAAIC,EAAehD,GAA8B8B,EAAM7B,GACvD,MAAM,IAAIhO,MAAM+Q,GAGlBJ,EAAUd,GAAQiB,EAClBJ,EAAaA,GAAcI,IAAoBD,EAIjD,OADAH,EAAaA,GAAcJ,EAAiBjE,SAAW3M,OAAOiP,KAAKhT,GAAO0Q,QACtDsE,EAAYhV,GEhddqV,CAAgB,aCJlB,CAClBrV,EAAQ,CACN6Q,WADM,KAENtF,UAFM,KAGN8C,OAAQ,IAJQ,WAQZ,EAAN,EAAM,KAAQ3O,EAAd,EAAcA,QACd,UACE,ItCRG,csCSD,kCAAO,GAAP,IAEEmR,WAAYwB,EAAO3S,UAEvB,ItCdG,gBsCeD,kCAAO,GAAP,IAEE6L,UAAW7L,IAEf,QACE,WDjBgC,YDMlB,CAClBM,EAAQ,CACN8D,SADM,GAENuM,cAFM,GAGN/E,aAHM,EAINN,OAJM,GAKNkF,kBAAmB,IANH,WAUZ,EAAN,EAAM,KAAQxQ,EAAd,EAAcA,QACd,UACE,InCnBG,gBmCqBD,OADAW,6BACA,2BAAO,GAAP,IAEEgQ,cAAe,2BAAKrQ,EAAL,eAAF,IAA4B,CAACN,EAAD,IAAcA,MAE3D,InC3BG,cmC6BD,OADAW,iCACA,2BAAO,GAAP,IAEEyD,SAAU,2BAAK9D,EAAL,UAAF,IAAuB,CAACN,EAAD,IAAcA,MAEjD,InChCG,wBmCiCD,kCAAO,GAAP,IAEEoE,SAAU,2BAAK9D,EAAL,UAAF,IAAuB,CAACN,EAAD,IAAcA,IAC7CwQ,kBAAmB,IAAIlQ,EAAJ,kBAA6BN,EAA7B,MAEvB,InCnCG,cmCoCD,MAAM4V,EAAgB,eAAatV,EAAMqQ,eAEzC,cADOiF,EAAiB5V,EAAxB,IACA,2BAAO,GAAP,IAEE2Q,cAFK,EAGLvM,SAAU,2BAAK9D,EAAL,UAAF,IAAuB,CAACN,EAAD,IAAcA,MAEjD,InC1CG,emC2CD,MAAM6V,EAAgB,eAAavV,EAAMqQ,eAEzC,cADOkF,EAAiB7V,EAAxB,IACA,2BAAO,GAAP,IAEE2Q,cAAekF,IAEnB,InC/CG,yBmCgDD,kCAAO,GAAP,IAEEjK,aAActL,eAAqB,IAEvC,InCnDG,gBmCoDD,MAAMwV,EAAW,eAAaxV,EAAMqQ,eAC9BoF,EAAW,eAAazV,EAAM8D,iBAC7B2R,EAAP,UACOD,EAAP,GACA,MAAME,EAAU,IAAI1V,EAAJ,eAA0BV,GAAYA,IAAtD,GAEA,kCAAO,GAAP,IAEEwE,SAFK,EAGLuM,cAHK,EAILrF,OAAQ0K,IAEZ,InC1DG,0BmC2DD,kCAAO,GAAP,IAEE1K,OAAQ,IAAIhL,EAAJ,YAEZ,InC5DG,4BmC6DD,MAAM2V,EAAU,IAAI3V,EAAJ,eAA0BV,GAAYA,IAAtD,GAEA,kCAAO,GAAP,IAEE0L,OAAQ2K,IAEZ,QACE,WClFgC,OECvB,CACX3V,EAAQ,CACJ4V,WADI,GAEJC,YAFI,GAGJzM,mBAHI,UAIJ0M,kBAAmB,WALZ,WASL,EAAN,EAAM,KAAQpW,EAAd,EAAcA,QACd,UACI,IpCjBD,+BoCkBK,kCAAO,GAAP,IAEIkW,WAAYlW,IAEpB,IpCrBD,gCoCsBK,kCAAO,GAAP,IAEImW,YAAanW,IAErB,IpCvBD,qBoCwBK,kCAAO,GAAP,IAEI0J,mBAAoB1J,IAE5B,IpC3BD,oBoC4BK,kCAAO,GAAP,IAEIoW,kBAAmBpW,IAE3B,QACI,WFjC8DqH,OGJ3D,CAAC/G,EAAQ,CACtBmE,IADsB,GAEtB8C,SAFsB,GAGtB6F,YAAa,IAHA,KAKb,OAAQuF,EAAR,MACE,I9BLG,a8BMD,kCAAO,GAAP,IACYvF,YAAauF,EAAO3S,UAElC,I9BVG,kB8BWD,kCAAO,GAAP,IAEEyE,IAAKkO,UAFA,IAGLpL,SAAUoL,UAAepL,WAE7B,QACE,aCZA8O,GAAa,CAAnB,KAEMC,GAAgB,CACpB/L,IADoB,mBAGpBgM,UAAW,CAAC,WAKDC,GN4Cb,SAASC,EAAYvB,EAASwB,EAAgBC,GAC5C,IAAIC,EAEJ,GAA8B,oBAAnBF,GAAqD,oBAAbC,GAA+C,oBAAbA,GAAmD,oBAAjB5C,UAAU,GAC/H,MAAM,IAAIpP,MAAM,uJAQlB,GAL8B,oBAAnB+R,GAAqD,qBAAbC,IACjDA,EAAWD,EACXA,OAAiBvB,GAGK,qBAAbwB,EAA0B,CACnC,GAAwB,oBAAbA,EACT,MAAM,IAAIhS,MAAM,2CAGlB,OAAOgS,EAASF,EAATE,CAAsBzB,EAASwB,GAGxC,GAAuB,oBAAZxB,EACT,MAAM,IAAIvQ,MAAM,0CAGlB,IAAIkS,EAAiB3B,EACjB4B,EAAeJ,EACfK,EAAmB,GACnBC,EAAgBD,EAChBE,GAAgB,EASpB,SAASC,IACHF,IAAkBD,IACpBC,EAAgBD,EAAiBI,SAUrC,SAASC,IACP,GAAIH,EACF,MAAM,IAAItS,MAAM,wMAGlB,OAAOmS,EA2BT,SAASO,EAAUC,GACjB,GAAwB,oBAAbA,EACT,MAAM,IAAI3S,MAAM,2CAGlB,GAAIsS,EACF,MAAM,IAAItS,MAAM,6TAGlB,IAAI4S,GAAe,EAGnB,OAFAL,IACAF,EAAcxD,KAAK8D,GACZ,WACL,GAAKC,EAAL,CAIA,GAAIN,EACF,MAAM,IAAItS,MAAM,kKAGlB4S,GAAe,EACfL,IACA,IAAIM,EAAQR,EAAcS,QAAQH,GAClCN,EAAcU,OAAOF,EAAO,GAC5BT,EAAmB,OA8BvB,SAASpL,EAASgH,GAChB,IAAKJ,GAAcI,GACjB,MAAM,IAAIhO,MAAM,2EAGlB,GAA2B,qBAAhBgO,EAAO7S,KAChB,MAAM,IAAI6E,MAAM,sFAGlB,GAAIsS,EACF,MAAM,IAAItS,MAAM,sCAGlB,IACEsS,GAAgB,EAChBH,EAAeD,EAAeC,EAAcnE,GAF9C,QAIEsE,GAAgB,EAKlB,IAFA,IAAIU,EAAYZ,EAAmBC,EAE1BlD,EAAI,EAAGA,EAAI6D,EAAU3G,OAAQ8C,IAAK,EAEzCwD,EADeK,EAAU7D,MAI3B,OAAOnB,EAcT,SAASiF,EAAeC,GACtB,GAA2B,oBAAhBA,EACT,MAAM,IAAIlT,MAAM,8CAGlBkS,EAAiBgB,EAKjBlM,EAAS,CACP7L,KAAMqS,GAAYE,UAWtB,SAASd,IACP,IAAIuG,EAEAC,EAAiBV,EACrB,OAAOS,EAAO,CASZT,UAAW,SAAmBW,GAC5B,GAAwB,kBAAbA,GAAsC,OAAbA,EAClC,MAAM,IAAIC,UAAU,0CAGtB,SAASC,IACHF,EAASG,MACXH,EAASG,KAAKf,KAMlB,OAFAc,IAEO,CACLE,YAFgBL,EAAeG,OAK7BG,IAAgB,WACtB,OAAOpV,MACN6U,EASL,OAHAnM,EAAS,CACP7L,KAAMqS,GAAYC,QAEbwE,EAAQ,CACbjL,SAAUA,EACV0L,UAAWA,EACXD,SAAUA,EACVQ,eAAgBA,IACTS,IAAgB9G,EAAYqF,EMjSXH,CAFH6B,YAAehC,GAAxC,IAIEiC,8BN0lBF,WACE,IAAK,IAAIlE,EAAON,UAAU/C,OAAQwH,EAAc,IAAIjE,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IACtFgE,EAAYhE,GAAQT,UAAUS,GAGhC,OAAO,SAAUiC,GACf,OAAO,WACL,IAAIgC,EAAQhC,EAAYhD,WAAM,EAAQM,WAElC2E,EAAY,WACd,MAAM,IAAI/T,MAAM,2HAGdgU,EAAgB,CAClBvB,SAAUqB,EAAMrB,SAChBzL,SAAU,WACR,OAAO+M,EAAUjF,WAAM,EAAQM,aAG/B6E,EAAQJ,EAAYK,KAAI,SAAUxC,GACpC,OAAOA,EAAWsC,MAGpB,OAAO9E,GAAe,GAAI4E,EAAO,CAC/B9M,SAFF+M,EAAYtE,GAAQX,WAAM,EAAQmF,EAAtBxE,CAA6BqE,EAAM9M,cMhnB/BmN,IAFf,MAIMC,GAAYC,YAAlB,ICCM3Y,GAAN,GAEM4Y,GAAgB,EAAC,OAE5BrQ,QAF4B,IAG5BsQ,SAH4B,IAI5B9L,cAAc,CAAEC,gBAAiB,IAJL,6BAO5B8L,iBAAiB,MAIf,6BAAUV,MAAOpY,IACf,6BAAa+Y,QAAS,KAAML,UAAWA,IACrC,2BAAYxU,UAAWA,EAAWC,eAAgBA,EAAgB4I,YAAaA,GAC7E,+BAAK/E,UAAWC,EACdK,MAAK,2BAAE,GAAF,IAEHC,MAAO,GAAF,OAAKA,UAFL,EAEA,MACLsQ,OAAQ,GAAF,OAAKA,UAAqBA,EAA1B,SAER,2BAAQG,KAAMA,IACdlS,2BAPF,MAQE,4BAAeiG,YAAaA,IAC5B,iCAAOnN,GAAG,OAAO2P,UAAQ,U,uGC/CrCgC,EAAO0H,QAAU,IAA0B,oD,mBCA3C1H,EAAO0H,QAAU,IAA0B,+C,mBCA3C1H,EAAO0H,QAAU,IAA0B,qD,mBCA3C1H,EAAO0H,QAAU,IAA0B,wD,mBCA3C1H,EAAO0H,QAAU,IAA0B,mD,mBCA3C1H,EAAO0H,QAAU,IAA0B,yD,mBCA3C1H,EAAO0H,QAAU,IAA0B,yD,mBCA3C1H,EAAO0H,QAAU,IAA0B,oD,mBCA3C1H,EAAO0H,QAAU,IAA0B,mD,mBCA3C1H,EAAO0H,QAAU,IAA0B,gD,mBCA3C1H,EAAO0H,QAAU,IAA0B,kC,oHCK3C,MAAMC,EAAY,IAAIC,gBAAgB9H,OAAO+H,SAASC,QAChDC,EAASJ,EAAUK,IAAI,UACvBrS,EAAWgS,EAAUK,IAAI,YACzB9U,EAAYyU,EAAUK,IAAI,aAC1BP,EAAOE,EAAUK,IAAI,QAmBZC,MAjBH,IAER,kBAAC,IAAD,CACER,KAAMA,GAAQ,GACd7U,eAAgB,CACdmV,OAAQA,GAAU,GAClBpS,SAAUA,GAAY,IAExBhD,UAAW,CACTO,UAAWA,GAAa,GACxBf,mBAAoB,KAEtB6E,MAAO,ICjBbkR,IAAS5S,OAAO,kBAAC,EAAD,MAAS1G,SAASuZ,eAAe,W","file":"static/js/main.c3bfa7cc.chunk.js","sourcesContent":["import SIPAccount from \"../lib/SipAccount\"\n\nexport const SIPACCOUNT_UNREGISTERED = 'SIPACCOUNT_UNREGISTERED'\nexport const NEW_USERAGENT = 'NEW_USERAGENT'\nexport const NEW_ACCOUNT = 'NEW_ACCOUNT'\n\nexport const setNewAccount = (account: SIPAccount) => {\n  return { type: NEW_ACCOUNT, payload: account }\n}","import { Session, SessionState } from 'sip.js'\nimport { Dispatch } from 'redux';\n\nexport const NEW_SESSION = 'NEW_SESSION'\nexport const NEW_ATTENDED_TRANSFER = 'NEW_ATTENDED_TRANSFER'\nexport const INCOMING_CALL = 'INCOMING_CALL'\n\nexport const ACCEPT_CALL = 'ACCEPT_CALL'\nexport const DECLINE_CALL = 'DECLINE_CALL'\n\nexport const SIPSESSION_STATECHANGE = 'SIPSESSION_STATECHANGE'\nexport const CLOSE_SESSION = 'CLOSE_SESSION'\n\nexport const SIPSESSION_MAKECALL_REQUEST = 'SIPSESSION_MAKECALL_REQUEST'\nexport const SIPSESSION_MAKECALL_SUCCESS = 'SIPSESSION_MAKECALL_SUCCESS'\nexport const SIPSESSION_MAKECALL_FAIL = 'SIPSESSION_MAKECALL_FAIL'\n\nexport const SIPSESSION_HOLD_REQUEST = 'SIPSESSION_HOLD_REQUEST'\nexport const SIPSESSION_HOLD_SUCCESS = 'SIPSESSION_HOLD_SUCCESS'\nexport const SIPSESSION_HOLD_FAIL = 'SIPSESSION_HOLD_FAIL'\nexport const SIPSESSION_UNHOLD_REQUEST = 'SIPSESSION_UNHOLD_REQUEST'\nexport const SIPSESSION_UNHOLD_SUCCESS = 'SIPSESSION_UNHOLD_SUCCESS'\nexport const SIPSESSION_UNHOLD_FAIL = 'SIPSESSION_UNHOLD_FAIL'\n\nexport const SIPSESSION_MUTE_REQUEST = 'SIPSESSION_MUTE_REQUEST'\nexport const SIPSESSION_MUTE_SUCCESS = 'SIPSESSION_MUTE_SUCCESS'\nexport const SIPSESSION_MUTE_FAIL = 'SIPSESSION_MUTE_FAIL'\nexport const SIPSESSION_UNMUTE_REQUEST = 'SIPSESSION_UNMUTE_REQUEST'\nexport const SIPSESSION_UNMUTE_SUCCESS = 'SIPSESSION_UNMUTE_SUCCESS'\nexport const SIPSESSION_UNMUTE_FAIL = 'SIPSESSION_UNMUTE_FAIL'\n\nexport const SIPSESSION_BLIND_TRANSFER_REQUEST =\n  'SIPSESSION_BLIND_TRANSFER_REQUEST'\nexport const SIPSESSION_BLIND_TRANSFER_SUCCESS =\n  'SIPSESSION_BLIND_TRANSFER_SUCCESS'\nexport const SIPSESSION_BLIND_TRANSFER_FAIL = 'SIPSESSION_BLIND_TRANSFER_FAIL'\n\nexport const SIPSESSION_ATTENDED_TRANSFER_REQUEST =\n  'SIPSESSION_ATTENDED_TRANSFER_REQUEST'\nexport const SIPSESSION_ATTENDED_TRANSFER_PENDING =\n  'SIPSESSION_ATTENDED_TRANSFER_PENDING'\nexport const SIPSESSION_ATTENDED_TRANSFER_READY =\n  'SIPSESSION_ATTENDED_TRANSFER_READY'\nexport const SIPSESSION_ATTENDED_TRANSFER_CANCEL =\n  'SIPSESSION_ATTENDED_TRANSFER_CANCEL'\nexport const SIPSESSION_ATTENDED_TRANSFER_FAIL =\n  'SIPSESSION_ATTENDED_TRANSFER_FAIL'\nexport const SIPSESSION_ATTENDED_TRANSFER_SUCCESS =\n  'SIPSESSION_ATTENDED_TRANSFER_SUCCESS'\n\nexport const stateChange = (newState: SessionState, id: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_STATECHANGE,\n    payload: { state: newState, id }\n  })\n}\n\nexport const closeSession = (id: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: CLOSE_SESSION,\n    payload: id\n  })\n}\n\nexport const acceptCall = (session: Session) => {\n  return { type: ACCEPT_CALL, payload: session }\n}\n\nexport const declineCall = (session: Session) => {\n  return { type: DECLINE_CALL, payload: session }\n}\n\nexport const endCall = (sessionId: string) => {\n  return { type: CLOSE_SESSION, payload: sessionId }\n}\n\nexport const holdCallRequest = (session: Session) => {\n  if (\n    !session.sessionDescriptionHandler ||\n    session.state !== SessionState.Established\n  ) {\n    return { type: SIPSESSION_HOLD_FAIL }\n  }\n  try {\n    session.invite({\n      sessionDescriptionHandlerModifiers: [\n        session.sessionDescriptionHandler!.holdModifier\n      ]\n    })\n    return { type: SIPSESSION_HOLD_REQUEST, payload: session.id }\n  } catch (err) {\n    return { type: SIPSESSION_HOLD_FAIL }\n  }\n}\n\n//maps thru onHold and sessions arrays looking for a call to put on hold before unHolding a call \nexport const unHoldCallRequest = (_session: Session, onHolds: Array<any>, sessions: Array<any>) => (dispatch: Dispatch) => {\n\n  //checks for sessions that exist but are not on hold\n  for (let [sessionId, session] of Object.entries(sessions)) {\n    if (\n      sessionId in onHolds === false &&\n      sessionId !== _session.id\n    ) {\n\n      // hold session if not on hold\n      try {\n        session.invite({\n          sessionDescriptionHandlerModifiers: [\n            session.sessionDescriptionHandler!.holdModifier\n          ]\n        })\n        dispatch({ type: SIPSESSION_HOLD_REQUEST, payload: session.id })\n      } catch (err) {\n        dispatch({ type: SIPSESSION_HOLD_FAIL })\n      }\n\n    }\n  }\n  // unhold original call \n  try {\n    _session.invite()\n    dispatch({ type: SIPSESSION_UNHOLD_REQUEST, payload: _session.id })\n  } catch (err) {\n    dispatch({ type: SIPSESSION_UNHOLD_FAIL })\n  }\n  return;\n}\n\nexport const blindTransferRequest = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_BLIND_TRANSFER_REQUEST\n  })\n}\n\nexport const blindTransferSuccess = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_BLIND_TRANSFER_SUCCESS\n  })\n}\n\nexport const blindTransferFail = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_BLIND_TRANSFER_FAIL\n  })\n}\n\nexport const attendedTransferRequest = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_ATTENDED_TRANSFER_REQUEST,\n  })\n}\n\nexport const attendedTransferCancel = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_ATTENDED_TRANSFER_CANCEL\n  })\n}\n\nexport const attendedTransferReady = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_ATTENDED_TRANSFER_READY\n  })\n}\n\nexport const attendedTransferPending = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_ATTENDED_TRANSFER_PENDING\n  })\n}\n\nexport const attendedTransferSuccess = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_ATTENDED_TRANSFER_SUCCESS\n  })\n}\nexport const attendedTransferFail = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_ATTENDED_TRANSFER_FAIL,\n  })\n}\n\nexport const muteRequest = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_MUTE_REQUEST\n  })\n}\n\nexport const muteSuccess = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_MUTE_SUCCESS\n  })\n}\n\nexport const muteFail = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_MUTE_FAIL\n  })\n}\n\nexport const unMuteRequest = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_UNMUTE_REQUEST\n  })\n}\n\nexport const unMuteSuccess = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_UNMUTE_SUCCESS\n  })\n}\n\nexport const unMuteFail = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SIPSESSION_UNMUTE_FAIL\n  })\n}\n\n","import { phoneStore } from '../index'\nimport { Session } from 'sip.js'\n\nimport {\n  REMOTE_AUDIO_CONNECTED,\n  LOCAL_AUDIO_CONNECTED\n} from '../actions/device'\n\n//adds track from getReceiver stream to <audio id={sessionId}> in Phone.tsx\nexport const setRemoteAudio = (session: Session) => {\n  const state = phoneStore.getState()\n  //@ts-ignore\n  const deviceId = state.device.primaryAudioOutput\n  const mediaElement = document.getElementById(session.id)\n  const remoteStream = new MediaStream()\n  //@ts-ignore\n  session.sessionDescriptionHandler.peerConnection\n    .getReceivers()\n    .forEach((receiver: any) => {\n      if (receiver.track) {\n        remoteStream.addTrack(receiver.track)\n      }\n    })\n  if (mediaElement) {\n    // @ts-ignore\n    mediaElement.setSinkId(\n      // audio output device_id\n      deviceId\n    )\n      .then(() => {\n        // @ts-ignore\n        mediaElement.srcObject = remoteStream\n        //@ts-ignore\n        mediaElement.play()\n      })\n  } else {\n    console.log('no media Element')\n  }\n  phoneStore.dispatch({\n    type: REMOTE_AUDIO_CONNECTED\n  })\n}\n\n//creates new audio track then replaces audio track in getSender stream w/ new track\nexport const setLocalAudio = (session: Session) => {\n  const state = phoneStore.getState()\n  //@ts-ignore\n  const deviceId = state.device.primaryAudioInput\n  // @ts-ignore\n  session.sessionDescriptionHandler.peerConnection\n    .getSenders()\n    .forEach(function (sender: any) {\n      console.log(sender)\n\n      if (sender.track && sender.track.kind === 'audio') {\n        let audioDeviceId =\n          // audio input device_id\n          // 'default'\n          deviceId\n        navigator.mediaDevices\n          // @ts-ignore\n\n          //creates a stream w track\n          .getUserMedia({ audio: { deviceId: audioDeviceId } })\n          .then(function (stream) {\n            let audioTrack = stream.getAudioTracks()\n            sender.replaceTrack(audioTrack[0])\n          })\n      }\n    })\n  phoneStore.dispatch({\n    type: LOCAL_AUDIO_CONNECTED\n  })\n}\n\nexport const cleanupMedia = (sessionId: string) => {\n  const mediaElement = document.getElementById(sessionId)\n  if (mediaElement) {\n    // @ts-ignore\n    mediaElement.srcObject = null\n    // @ts-ignore\n    mediaElement.pause()\n  }\n}\n","\nexport const AUDIO_INPUT_DEVICES_DETECTED = 'AUDIO_INPUT_DEVICES_DETECTED'\nexport const AUDIO_OUTPUT_DEVICES_DETECTED = 'AUDIO_OUTPUT_DEVICES_DETECTED'\nexport const REMOTE_AUDIO_CONNECTED = 'REMOTE_AUDIO_CONNECTED'\nexport const LOCAL_AUDIO_CONNECTED = 'LOCAL_AUDIO_CONNECTED'\nexport const SET_PRIMARY_OUTPUT = 'SET_PRIMARY_OUTPUT'\nexport const SET_PRIMARY_INPUT = 'SET_PRIMARY_INPUT'\n\n\nexport const getInputAudioDevices = () => {\n  let inputArray: Array<Object> = []\n  navigator.mediaDevices\n    .enumerateDevices()\n    .then(function (devices: Array<Object>) {\n      devices.forEach(function (device: any) {\n        if (device.kind === 'audioinput') {\n          inputArray.push(device)\n        }\n      })\n    })\n  return {\n    type: AUDIO_INPUT_DEVICES_DETECTED,\n    payload: inputArray\n  }\n}\n\nexport const getOutputAudioDevices = () => {\n  let outputArray: Array<Object> = []\n  navigator.mediaDevices\n    .enumerateDevices()\n    .then(function (devices: Array<Object>) {\n      devices.forEach(function (device: any) {\n        if (device.kind === 'audiooutput') {\n          outputArray.push(device)\n        }\n      })\n    })\n  return {\n    type: AUDIO_OUTPUT_DEVICES_DETECTED,\n    payload: outputArray\n  }\n}\n\nexport const setPrimaryOutput = (id: string) => {\n  // TODO other stuff for changing the device\n  return {\n    type: SET_PRIMARY_OUTPUT,\n    payload: id\n  }\n}\n\nexport const setPrimaryInput = (id: string) => {\n  // TODO other stuff for changing the device\n  return {\n    type: SET_PRIMARY_INPUT,\n    payload: id\n  }\n}\n\n\n\n\n","//@ts-ignore\nimport Tone from 'tone'\n\nconst DTMF_MATRIX = {\n  1: [697, 1209],\n  2: [697, 1336],\n  3: [697, 1477],\n  A: [697, 1633],\n  4: [770, 1209],\n  5: [770, 1336],\n  6: [770, 1477],\n  B: [770, 1633],\n  7: [852, 1209],\n  8: [852, 1336],\n  9: [852, 1477],\n  C: [852, 1633],\n  0: [941, 1209],\n  '*': [941, 1336],\n  '#': [941, 1477],\n  D: [941, 1633]\n}\n\nconst Synth = Tone.PolySynth && new Tone.PolySynth(2, Tone.Synth)\nconst FMSynth = Tone.PolySynth && new Tone.PolySynth(2, Tone.FMSynth)\n\nexport const playDTMF = (key: any, deviceId: string) => {\n  let obj = DTMF_MATRIX[key]\n  if (!obj) {\n    console.log('invalid DTMF tone input')\n  }\n  Synth.volume.value = -22\n  Synth.set({\n    oscillator: {\n      type: 'sine'\n    },\n    envelope: {\n      attack: 0.02,\n      decay: 0.1,\n      sustain: 0.2,\n      release: 0.02\n    }\n  })\n\n  if (deviceId !== 'default') {\n    const mediaElement = document.getElementById('tone')\n\n\n    if (mediaElement) {\n      let dest = Tone.context.createMediaStreamDestination()\n      Synth.connect(dest)\n      // @ts-ignore\n      mediaElement.setSinkId(\n        // audio output device_id\n        deviceId\n      ).then(() => {\n        // @ts-ignore\n        mediaElement.srcObject = dest.stream\n        //@ts-ignore\n\n        mediaElement.play()\n      })\n\n\n    }\n  } else {\n    Synth.toMaster()\n  }\n\n  Synth.triggerAttackRelease(obj, 0.3)\n}\n\nexport const callDisconnect = (deviceId: string) => {\n  FMSynth.triggerAttack(['C4', 'E4'], '+0.1')\n  FMSynth.triggerRelease(['C4', 'E4'], '+0.14')\n  FMSynth.triggerAttack(['D4', 'G4'], '+0.14')\n  FMSynth.triggerRelease(['D4', 'G4'], '+0.18')\n  if (deviceId !== 'default') {\n    const mediaElement = document.getElementById('tone')\n\n\n    if (mediaElement) {\n      let dest = Tone.context.createMediaStreamDestination()\n      Synth.connect(dest)\n      // @ts-ignore\n      mediaElement.setSinkId(\n        // audio output device_id\n        deviceId\n      ).then(() => {\n        // @ts-ignore\n        mediaElement.srcObject = dest.stream\n        //@ts-ignore\n\n        mediaElement.play()\n      })\n\n\n    }\n\n  }\n  else {\n    FMSynth.toMaster()\n  }\n}\n\nclass TonePlayer {\n  private loop: any\n\n\n  //get audio element, set srcObj to device, and play the track\n  ringtone = (deviceId: string) => {\n    // console.log(deviceId)\n    // const ring = require('./assets/ring.mp3')\n\n    // const ringtone = new Audio(ring);\n    // ringtone.addEventListener('loadeddata', () => {\n    //   ringtone.play()\n    //   // The duration variable now holds the duration (in seconds) of the audio clip \n    // })\n\n    const mediaElement = document.getElementById('ringtone')\n    if (deviceId !== 'default') {\n      if (mediaElement) {\n\n        // @ts-ignore\n        mediaElement.setSinkId(\n          // audio output device_id\n          // 'default'\n          deviceId\n        ).then(() => {\n          // @ts-ignore\n          mediaElement.play()\n        })\n      } else {\n        console.log('no media Element')\n      }\n    } else {\n      // @ts-ignore\n      mediaElement.play()\n    }\n\n\n\n  }\n\n  ringback = (deviceId: string) => {\n    let dest = Tone.context.createMediaStreamDestination()\n    console.log(dest)\n    Synth.set({\n      oscillator: {\n        type: 'sine'\n      },\n      envelope: {\n        attack: 0.02,\n        decay: 0.1,\n        sustain: 0.2,\n        release: 0.02\n      }\n    }).connect(dest)\n    if (deviceId !== 'default') {\n      const mediaElement = document.getElementById('tone')\n\n\n      if (mediaElement) {\n        let dest = Tone.context.createMediaStreamDestination()\n        Synth.connect(dest)\n        // @ts-ignore\n        mediaElement.setSinkId(\n          // audio output device_id\n          deviceId\n        ).then(() => {\n          // @ts-ignore\n          mediaElement.srcObject = dest.stream\n          //@ts-ignore\n\n          mediaElement.play()\n        })\n      }\n\n    } else {\n      Synth.toMaster()\n    }\n\n    this.loop = new Tone.Loop((time: any) => {\n      Synth.triggerAttack([440, 480])\n      Synth.triggerRelease([440, 480], time + 2)\n    }, 6)\n    this.loop.start(0)\n    Tone.Transport.start()\n  }\n\n  stop = () => {\n    try {\n      this.loop.stop(0)\n      Tone.Transport.stop()\n      Synth.triggerRelease([440, 480])\n    } catch{\n      const mediaElement = document.getElementById('ringtone')\n      //@ts-ignore\n      mediaElement.pause()\n\n    }\n  }\n}\n\nexport default TonePlayer\n","import TonePlayer from './TonePlayer'\nimport { phoneStore } from '../index'\n\nclass ToneManager {\n  currentTone: any\n  constructor() { }\n\n  public playRing(type: string) {\n    const state = phoneStore.getState()\n    //@ts-ignore\n    const deviceId = state.device.primaryAudioOutput\n    if (this.currentTone) {\n      this.currentTone.stop()\n      this.currentTone = undefined\n    }\n    if (type === 'ringback') {\n      this.currentTone = new TonePlayer()\n      this.currentTone.ringback(deviceId)\n    } else if (type == 'ringtone') {\n      this.currentTone = new TonePlayer()\n      this.currentTone.ringtone(deviceId)\n    }\n  }\n\n  public stopAll() {\n    if (this.currentTone) {\n      this.currentTone.stop()\n      this.currentTone = undefined\n    }\n  }\n}\n\nconst toneManager = new ToneManager()\nexport default toneManager\n","import { phoneStore } from '../index'\nimport { SessionState, Session } from 'sip.js'\nimport { SIPSESSION_STATECHANGE, CLOSE_SESSION } from '../actions/sipSessions'\n\nimport { setLocalAudio, setRemoteAudio, cleanupMedia } from './audio'\nimport toneManager from './ToneManager'\nexport class SessionStateHandler {\n  private session: Session\n  constructor(session: Session) {\n    this.session = session\n  }\n\n  public stateChange = (newState: SessionState) => {\n    switch (newState) {\n      case SessionState.Establishing:\n        toneManager.playRing('ringback')\n        phoneStore.dispatch({\n          type: SIPSESSION_STATECHANGE\n        })\n        break\n      case SessionState.Established:\n        phoneStore.dispatch({\n          type: SIPSESSION_STATECHANGE\n        })\n        toneManager.stopAll()\n        setLocalAudio(this.session)\n        setRemoteAudio(this.session)\n        break\n      case SessionState.Terminating:\n        phoneStore.dispatch({\n          type: SIPSESSION_STATECHANGE\n        })\n        toneManager.stopAll()\n        cleanupMedia(this.session.id)\n        break\n      case SessionState.Terminated:\n        phoneStore.dispatch({\n          type: SIPSESSION_STATECHANGE\n        })\n        toneManager.stopAll()\n        setTimeout(() => {\n          phoneStore.dispatch({\n            type: CLOSE_SESSION,\n            payload: this.session.id\n          })\n        }, 5000)\n        break\n      default:\n        console.log(`Unknown session state change: ${newState}`)\n        break\n    }\n  }\n}\n\nexport const getFullNumber = (number: string) => {\n  if (number.length < 10) {\n    return number\n  }\n  // @ts-ignore\n  let fullNumber = `+${phoneStore.getState().sipAccounts.sipAccount._config.defaultCountryCode}${number}`\n  if (number.includes('+') && number.length === 10) {\n    fullNumber = `${number}`\n  }\n  console.log(fullNumber)\n  return fullNumber\n}\n\nexport const statusMask = (status: string) => {\n  switch (status) {\n    case 'Established':\n      return 'Connected'\n    case 'Establishing':\n      return 'Calling...'\n    case 'Initial':\n      return 'Initial'\n    case 'Terminating':\n    case 'Terminated':\n      return 'Ended'\n    default:\n      return 'Unknown Status'\n  }\n}\n\nexport const getDurationDisplay = (duration: number) => {\n  let minutes = Math.floor(duration / 60)\n  let hours = Math.floor(minutes / 60)\n  minutes = minutes % 60\n  let seconds = duration % 60\n  let dh, dm, ds\n  if (hours && hours < 10) {\n    dh = `0${hours}:`\n  } else if (hours) {\n    dh = `${hours}:`\n  } else {\n    dh = '00:'\n  }\n  if (minutes && minutes < 10) {\n    dm = `0${minutes}:`\n  } else if (minutes) {\n    dm = `${minutes}:`\n  } else {\n    dm = '00:'\n  }\n  if (seconds && seconds < 10) {\n    ds = `0${seconds}`\n  } else if (seconds) {\n    ds = `${seconds}`\n  } else {\n    ds = '00'\n  }\n  return `${hours ? dh : ''}${dm}${ds}`\n}\n","import { phoneStore } from '../index'\nimport { SessionState, Session } from 'sip.js'\nimport {\n  SIPSESSION_STATECHANGE,\n  CLOSE_SESSION,\n  SIPSESSION_HOLD_REQUEST,\n  holdCallRequest\n} from '../actions/sipSessions'\nimport { setLocalAudio, setRemoteAudio, cleanupMedia } from './audio'\n\nexport class IncomingSessionStateHandler {\n  private incomingSession: Session\n  constructor(incomingSession: Session) {\n    this.incomingSession = incomingSession\n  }\n\n  public stateChange = (newState: SessionState) => {\n    switch (newState) {\n      case SessionState.Establishing:\n        phoneStore.dispatch({\n          type: SIPSESSION_STATECHANGE\n        })\n        break\n      case SessionState.Established:\n        phoneStore.dispatch({\n          type: SIPSESSION_STATECHANGE\n        })\n        this.holdAll()\n        setLocalAudio(this.incomingSession)\n        setRemoteAudio(this.incomingSession)\n        break\n      case SessionState.Terminating:\n        phoneStore.dispatch({\n          type: SIPSESSION_STATECHANGE\n        })\n        cleanupMedia(this.incomingSession.id)\n        break\n      case SessionState.Terminated:\n        phoneStore.dispatch({\n          type: SIPSESSION_STATECHANGE\n        })\n        setTimeout(() => {\n          phoneStore.dispatch({\n            type: CLOSE_SESSION,\n            payload: this.incomingSession.id\n          })\n        }, 5000)\n        break\n      default:\n        console.log(`Unknown session state change: ${newState}`)\n        break\n    }\n  }\n\n  public holdAll() {\n    const state = phoneStore.getState()\n    //@ts-ignore\n    const onHolds = state.sipSessions.onHold\n    //@ts-ignore\n    const sessions = state.sipSessions.sessions\n    for (let [sessionId, session] of Object.entries(sessions)) {\n      if (\n        sessionId in onHolds === false &&\n        sessionId !== this.incomingSession.id\n      ) {\n        try {\n          //@ts-ignore\n          holdCallRequest(session)\n          //dispatch here because class is not connected to redux actions\n          phoneStore.dispatch({\n            type: SIPSESSION_HOLD_REQUEST,\n            //@ts-ignore\n            payload: session.id\n          })\n          return\n        } catch (err) {\n          return\n        }\n      }\n    }\n  }\n}\n","import {\n  Inviter,\n  Invitation,\n  Referral,\n  Registerer,\n  RegistererState,\n  RegistererOptions,\n  Session,\n  UserAgent,\n  UserAgentOptions\n} from 'sip.js'\nimport { TransportOptions } from 'sip.js/lib/platform/web'\nimport { phoneStore } from '../index'\nimport { NEW_USERAGENT } from '../actions/sipAccounts'\nimport { SessionStateHandler, getFullNumber } from '../util/sessions'\nimport { IncomingSessionStateHandler } from '../util/incomingSession'\n\nimport { NEW_SESSION, INCOMING_CALL } from '../actions/sipSessions'\nimport { SipConfig, SipCredentials } from '../models'\n\nexport default class SIPAccount {\n  public _config: SipConfig\n  public _credentials: SipCredentials\n  public _userAgent: any\n  public _registerer: any\n\n  constructor(sipConfig: SipConfig, sipCredentials: SipCredentials) {\n    this._config = sipConfig\n    this._credentials = sipCredentials\n    const uri = UserAgent.makeURI('sip:' + sipCredentials.sipuri)\n    if (!uri) {\n      throw new Error('Failed to create URI')\n    }\n    const transportOptions: TransportOptions = {\n      server: sipConfig.websocket\n    }\n    const userAgentOptions: UserAgentOptions = {\n      autoStart: false,\n      autoStop: true,\n      noAnswerTimeout: sipConfig.noAnswerTimeout || 30,\n      logBuiltinEnabled: process.env.NODE_ENV !== 'production',\n      logConfiguration: process.env.NODE_ENV !== 'production',\n      logLevel: process.env.NODE_ENV !== 'production' ? 'debug' : 'error',\n      authorizationPassword: sipCredentials.password,\n      userAgentString: 'OTF-react-sip-phone',\n      hackWssInTransport: true,\n      transportOptions,\n      uri,\n      sessionDescriptionHandlerFactoryOptions: {\n        constraints: {\n          audio: {\n            deviceId:\n              'default'\n          },\n          video: false\n        },\n        alwaysAcquireMediaFirst: true,\n        iceCheckingTimeout: 500\n      }\n    }\n    const registererOptions: RegistererOptions = {\n      expires: 300,\n      logConfiguration: process.env.NODE_ENV !== 'production'\n    }\n\n    //check here for register\n    this._userAgent = new UserAgent(userAgentOptions)\n    this._registerer = new Registerer(this._userAgent, registererOptions)\n    this.setupDelegate() // Delegate is what handles incoming calls\n    this._userAgent.start().then(() => {\n      this._registerer.register()\n      this.setupRegistererListener()\n      // Push ua to store\n      phoneStore.dispatch({ type: NEW_USERAGENT, payload: this._userAgent })\n    })\n  }\n\n  setupDelegate() {\n    this._userAgent.delegate = {\n      onInvite(invitation: Invitation): void {\n        // An Invitation is a Session\n        const incomingSession: Session = invitation\n\n        // Setup incoming session delegate\n        incomingSession.delegate = {\n          // Handle incoming REFER request.\n          onRefer(referral: Referral): void {\n            console.log(referral)\n          }\n        }\n\n        phoneStore.dispatch({ type: INCOMING_CALL, payload: incomingSession })\n\n        const stateHandler = new IncomingSessionStateHandler(incomingSession)\n        // Handle incoming session state changes.\n        incomingSession.stateChange.addListener(stateHandler.stateChange)\n      }\n    }\n  }\n\n  setupRegistererListener() {\n    this._registerer.stateChange.addListener((newState: RegistererState) => {\n      switch (newState) {\n        case RegistererState.Initial:\n          console.log('The user registration has initialized  ')\n          break\n        case RegistererState.Registered:\n          console.log('The user is registered ')\n          break\n        case RegistererState.Unregistered:\n          console.log('The user is unregistered ')\n          break\n        case RegistererState.Terminated:\n          console.log('The user is terminated ')\n          break\n      }\n    })\n  }\n\n  makeCall(number: string) {\n\n    // Make a call\n    const target = UserAgent.makeURI(\n      `sip:${getFullNumber(number)}@sip.reper.io;user=phone`\n    )\n    if (target) {\n      console.log(`Calling ${number}`)\n      const inviter = new Inviter(this._userAgent, target)\n      // An Inviter is a Session\n      const outgoingSession: Session = inviter\n      // Setup outgoing session delegate\n      outgoingSession.delegate = {\n        // Handle incoming REFER request.\n        onRefer(referral: Referral): void {\n          // TODO\n          console.log('Referred: ' + referral)\n        }\n      }\n      phoneStore.dispatch({ type: NEW_SESSION, payload: outgoingSession })\n      // Handle outgoing session state changes.\n      const stateHandler = new SessionStateHandler(outgoingSession)\n      outgoingSession.stateChange.addListener(stateHandler.stateChange)\n      outgoingSession\n        .invite()\n        .then(() => {\n          console.log('Invite sent!')\n        })\n        .catch((error: Error) => {\n          console.log(error)\n        })\n    } else {\n      console.log(`Failed to establish session for outgoing call to ${number}`)\n    }\n    // toneManager.playRing('ringback')\n\n  }\n}\n","import * as React from 'react'\nimport { SipConfig, SipCredentials, PhoneConfig } from './models'\nimport SIPAccount from './lib/SipAccount'\nimport { connect } from 'react-redux'\nimport { setNewAccount } from './actions/sipAccounts'\nimport { setPhoneConfig, setCredentials } from  './actions/config'\n\n// Wrapper component to do any initialization of the Sip connection.\n\ninterface Props {\n  sipCredentials: SipCredentials\n  sipConfig: SipConfig\n  phoneConfig: PhoneConfig\n  setNewAccount: Function\n  setPhoneConfig: Function\n  setCredentials: Function\n  children: any\n}\n\nclass SipWrapper extends React.Component<Props> {\n\n  componentDidMount() {\n    console.log('mounted')\n    if (this.props.sipCredentials.password) {\n      this.initializeSip()\n    }\n  }\n\n  initializeSip() {\n    const account = new SIPAccount(this.props.sipConfig, this.props.sipCredentials)\n    this.props.setNewAccount(account)\n  }\n\n  render() {\n    return <React.Fragment>\n      { this.props.children }\n    </React.Fragment>\n  }\n}\nconst mapStateToProps = () => ({})\nconst actions = {\n  setNewAccount,\n  setPhoneConfig,\n  setCredentials\n}\nexport default connect(mapStateToProps, actions)(SipWrapper)","import { PhoneConfig } from '../models'\n\nexport const SET_CREDENTIALS = 'SET_CREDENTIALS'\nexport const SET_CONFIG = 'SET_CONFIG'\n\nexport const setCredentials = (uri: string = '', password: string = '') => {\n  return { type: SET_CREDENTIALS, payload: {uri, password} }\n}\n\nexport const setPhoneConfig = (config: PhoneConfig) => {\n  return { type: SET_CONFIG, payload: config}\n}","/* loaded by smart-asset */\nexport default require(\"./settings-24px~HQuidduc.svg\")","/* loaded by smart-asset */\nexport default require(\"./mic-24px~xExSpqQP.svg\")","/* loaded by smart-asset */\nexport default require(\"./volume_up-24px~qJQJhpOr.svg\")","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { setPrimaryInput, setPrimaryOutput, getInputAudioDevices, getOutputAudioDevices } from '../actions/device'\nimport styles from './Status.scss'\nimport Select from 'react-select';\nimport settingsIcon from '../assets/settings-24px.svg'\nimport micIcon from '../assets/mic-24px.svg'\nimport soundIcon from '../assets/volume_up-24px.svg'\n\ninterface Props {\n  name: string\n  inputs: any\n  outputs: any\n  primaryInput: string\n  primaryOutput: string\n  setPrimaryInput: Function\n  setPrimaryOutput: Function\n  getInputAudioDevices: Function\n  getOutputAudioDevices: Function\n}\n\nclass Status extends React.Component<Props> {\n  state = { settingsMenu: false }\n\n  componentDidMount() {\n    this.props.getInputAudioDevices()\n    this.props.getOutputAudioDevices()\n  }\n  mapOptions(options: any) {\n    const list: any = []\n    options.map((option: any) => {\n      list.push({ value: option.deviceId, label: option.label })\n    })\n    return list\n  }\n  handleChangeDevice(type: string, id: string) {\n    if (type === 'out') {\n      this.props.setPrimaryOutput(id)\n    } else {\n      this.props.setPrimaryInput(id)\n    }\n  }\n  render() {\n    const { props, state } = this\n    const inputs = this.mapOptions(props.inputs)\n    const outputs = this.mapOptions(props.outputs)\n    return (\n      <React.Fragment>\n        <div className={styles.container}>\n          <div className={styles.userString} >{props.name}</div>\n          <div\n            id={styles.settingsButton}\n            className={state.settingsMenu ? styles.on : ''}\n            onClick={() => this.setState({ settingsMenu: !state.settingsMenu })}\n          >\n            <img src={settingsIcon} />\n          </div>\n        </div>\n        <div\n          id={styles.settingsMenu}\n          className={state.settingsMenu ? '' : styles.closed}\n        >\n          <hr style={{ width: '100%' }} />\n          <div className={styles.dropdownRow}>\n            <img className={styles.dropdownIcon} src={soundIcon} />\n            <Select\n              placeholder=\"Select Output...\"\n              value={outputs.find((output: any) => output.value === props.primaryOutput) || null}\n              onChange={option => this.handleChangeDevice('out', option.value)}\n              options={outputs}\n              id={styles.dropdowns}\n            />\n          </div>\n          <div className={styles.dropdownRow}>\n            <img className={styles.dropdownIcon} src={micIcon} />\n            <Select\n              placeholder=\"Select Input...\"\n              value={inputs.find((input: any) => input.value === props.primaryInput)}\n              onChange={option => this.handleChangeDevice('in', option.value)}\n              options={inputs}\n              id={styles.dropdowns}\n            />\n          </div>\n          <hr style={{ width: '100%' }} />\n        </div>\n      </React.Fragment>\n    )\n  }\n}\nconst mapStateToProps = (state: any) => ({\n  inputs: state.device.audioInput,\n  outputs: state.device.audioOutput,\n  primaryInput: state.device.primaryAudioInput,\n  primaryOutput: state.device.primaryAudioOutput\n})\n\nconst actions = {\n  setPrimaryInput,\n  setPrimaryOutput,\n  getInputAudioDevices,\n  getOutputAudioDevices\n}\nexport default connect(mapStateToProps, actions)(Status)","import * as React from 'react'\nimport styles from './Phone.scss'\n\ninterface Props {\n  text: string,\n  click: Function,\n  letters: string,\n}\n\nconst DialButton = ({ text, click, letters }: Props) => {\n  return <div id=\"sip-dial-button\"\n    className={styles.dialpadButton}\n    onClick={() => click()}>\n    {text}\n    <div style={{opacity: letters === '1' ? 0 : 1}} className={styles.dialpadButtonLetters}>\n      {letters}\n    </div>\n  </div>\n}\n\nexport default DialButton","export const getButtonLetters = (value: string) => {\n  switch (value) {\n    case '1':\n      return '1'\n    case '2':\n      return 'ABC'\n    case '3':\n      return 'DEF'\n    case '4':\n      return 'GHI'\n    case '5':\n      return 'JKL'\n    case '6':\n      return 'MNO'\n    case '7':\n      return 'PQRS'\n    case '8':\n      return 'TUV'\n    case '9':\n      return 'WXYZ'\n    case '0':\n      return '+'\n    default:\n      return ''\n  }\n}","import * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport styles from './Phone.scss'\nimport DialButton from './DialButton'\nimport { Session, SessionState } from 'sip.js'\nimport { getButtonLetters } from '../../util/buttons'\nimport { playDTMF } from '../../util/TonePlayer'\ninterface Props {\n  open: boolean\n  session: Session\n  deviceId: string\n}\n\nclass Dialpad extends React.Component<Props> {\n  topRow: any = []\n  middleRow: any = []\n  bottomRow: any = []\n\n  constructor(props: Props) {\n    super(props)\n    for (let x = 1; x < 4; x++) {\n      this.topRow.push(this.getButton(x.toString()))\n    }\n    for (let x = 4; x < 7; x++) {\n      this.middleRow.push(this.getButton(x.toString()))\n    }\n    for (let x = 7; x < 10; x++) {\n      this.bottomRow.push(this.getButton(x.toString()))\n    }\n  }\n\n  getButton(value: string) {\n    return (\n      <DialButton\n        key={value}\n        text={value}\n        letters={getButtonLetters(value)}\n        click={() => this.handleClick(value)}\n      />\n    )\n  }\n\n  handleClick(value: string) {\n    if (this.props.session.state === SessionState.Established) {\n      this.sendDTMF(value)\n      playDTMF(value, this.props.deviceId)\n    }\n  }\n\n  sendDTMF(value: string) {\n    const options = {\n      requestOptions: {\n        body: {\n          contentDisposition: 'render',\n          contentType: 'application/dtmf-relay',\n          content: `Signal=${value}\\r\\nDuration=1000`\n        }\n      }\n    }\n    this.props.session.info(options)\n  }\n\n  render() {\n    return (\n      <div className={this.props.open ? '' : styles.closed} id={styles.dialpad}>\n        <div className={styles.dialpadRow}>{this.topRow}</div>\n        <div className={styles.dialpadRow}>{this.middleRow}</div>\n        <div className={styles.dialpadRow}>{this.bottomRow}</div>\n        <div className={styles.dialpadRow}>\n          {this.getButton('*')}\n          {this.getButton('0')}\n          {this.getButton('#')}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  deviceId: state.device.primaryAudioOutput\n})\nconst actions = {\n\n}\nexport default connect(mapStateToProps, actions)(Dialpad)\n","/* loaded by smart-asset */\nexport default require(\"./phone_paused-24px~TWxpQtZf.svg\")","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport styles from './Phone.scss'\nimport { Session, UserAgent } from 'sip.js'\n\nimport holdIcon from '../../assets/phone_paused-24px.svg'\n\nimport { holdCallRequest, unHoldCallRequest } from '../../actions/sipSessions'\n\ninterface Props {\n  session: Session\n  userAgent: UserAgent\n  holdCallRequest: Function\n  unHoldCallRequest: Function\n  onHold: Array<Object>\n  sessions: Array<Object>\n}\n\nclass Hold extends React.Component<Props> {\n  hold() {\n    if (this.checkHoldState()) {\n      this.props.unHoldCallRequest(this.props.session, this.props.onHold, this.props.sessions)\n    } else {\n      this.props.holdCallRequest(this.props.session)\n    }\n    return\n  }\n\n  checkHoldState() {\n    return this.props.onHold.includes(this.props.session.id)\n  }\n\n  render() {\n    return (\n      <button className={this.checkHoldState() ? styles.on : ''} id={styles.actionButton} onClick={() => this.hold()}>\n        <img src={holdIcon} />\n      </button>\n    )\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  stateChanged: state.sipSessions.stateChanged,\n  sessions: state.sipSessions.sessions,\n  userAgent: state.sipAccounts.userAgent,\n  onHold: state.sipSessions.onHold\n})\nconst actions = {\n  holdCallRequest,\n  unHoldCallRequest\n}\n\nexport default connect(mapStateToProps, actions)(Hold)\n","/* loaded by smart-asset */\nexport default require(\"./mic_off-24px~bjejwOqd.svg\")","import * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport styles from './Phone.scss'\nimport { Session, SessionState, UserAgent } from 'sip.js'\n\nimport micOffIcon from '../../assets/mic_off-24px.svg'\n\nimport {\n  muteRequest,\n  muteSuccess,\n  muteFail,\n  unMuteRequest,\n  unMuteSuccess,\n  unMuteFail\n} from '../../actions/sipSessions'\n\ninterface Props {\n  session: Session\n  userAgent: UserAgent\n  muteRequest: Function\n  muteSuccess: Function\n  muteFail: Function\n  unMuteRequest: Function\n  unMuteSuccess: Function\n  unMuteFail: Function\n}\n\nclass Mute extends React.Component<Props> {\n  state = {\n    onMute: false\n  }\n\n  mute() {\n    if (this.state.onMute) {\n      this.props.unMuteRequest()\n      return new Promise((resolve, reject) => {\n        if (\n          !this.props.session.sessionDescriptionHandler ||\n          this.props.session.state !== SessionState.Established\n        ) {\n          this.props.unMuteFail()\n          reject('No session to mute')\n          return\n        }\n        try {\n          const pc =\n            // @ts-ignore\n            this.props.session.sessionDescriptionHandler!.peerConnection\n          pc.getSenders().forEach(function (stream: any) {\n            if (stream.track && stream.track.kind === 'audio') {\n              stream.track.enabled = true\n            }\n          })\n          this.props.unMuteSuccess()\n          this.setState({ onMute: false })\n          resolve()\n          return\n        } catch (err) {\n          this.props.unMuteFail()\n          reject(err)\n          return\n        }\n      })\n    }\n\n    if (!this.state.onMute) {\n      return new Promise((resolve, reject) => {\n        if (\n          !this.props.session.sessionDescriptionHandler ||\n          this.props.session.state !== SessionState.Established\n        ) {\n          this.props.muteFail()\n          reject('No session to mute')\n          return\n        }\n        try {\n          this.props.muteRequest()\n          const pc =\n            // @ts-ignore\n            this.props.session.sessionDescriptionHandler!.peerConnection\n          console.log(pc.getSenders())\n          pc.getSenders().forEach(function (stream: any) {\n            if (stream.track && stream.track.kind === 'audio') {\n              stream.track.enabled = false\n            }\n          })\n          this.props.muteSuccess()\n          this.setState({ onMute: true })\n          resolve()\n          return\n        } catch (err) {\n          this.props.muteFail()\n          reject(err)\n          return\n        }\n      })\n    }\n    this.props.muteFail()\n    return\n  }\n\n  render() {\n    return (\n      <div\n        className={this.state.onMute ? styles.on : ''}\n        id={styles.actionButton} onClick={() => this.mute()}>\n        <img src={micOffIcon} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  stateChanged: state.sipSessions.stateChanged,\n  sessions: state.sipSessions.sessions,\n  userAgent: state.sipAccounts.userAgent\n})\nconst actions = {\n  muteRequest,\n  muteSuccess,\n  muteFail,\n  unMuteRequest,\n  unMuteSuccess,\n  unMuteFail\n}\n\nexport default connect(mapStateToProps, actions)(Mute)\n","/* loaded by smart-asset */\nexport default require(\"./arrow_forward-24px~UJhdZXVe.svg\")","import * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport styles from './Phone.scss'\n\nimport { Session, UserAgent } from 'sip.js'\nimport {\n  blindTransferRequest,\n  blindTransferSuccess,\n  blindTransferFail\n} from '../../actions/sipSessions'\nimport { getFullNumber } from '../../util/sessions'\nimport blindIcon from '../../assets/arrow_forward-24px.svg'\n\ninterface Props {\n  session: Session\n  userAgent: UserAgent\n  destination: string\n  blindTransferRequest: Function\n  blindTransferSuccess: Function\n  blindTransferFail: Function\n}\n\nclass BlindTransfer extends React.Component<Props> {\n  blindTransferCall() {\n    this.props.blindTransferRequest()\n    const target = UserAgent.makeURI(\n      `sip:${getFullNumber(this.props.destination)}@sip.reper.io;user=phone`\n    )\n    if (target) {\n      try {\n        this.props.session.refer(target)\n        this.props.blindTransferSuccess()\n      } catch (err) {\n        console.log(err)\n      }\n    } else {\n      this.props.blindTransferFail()\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          className={styles.transferButtons}\n          onClick={() => this.blindTransferCall()}\n        >\n          <img src={blindIcon} />\n        </button>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  stateChanged: state.sipSessions.stateChanged,\n  sessions: state.sipSessions.sessions,\n  userAgent: state.sipAccounts.userAgent\n})\nconst actions = {\n  blindTransferRequest,\n  blindTransferSuccess,\n  blindTransferFail\n}\n\nexport default connect(mapStateToProps, actions)(BlindTransfer)\n","/* loaded by smart-asset */\nexport default require(\"./phone_in_talk-24px~DQfZjkDQ.svg\")","/* loaded by smart-asset */\nexport default require(\"./call_end-24px~HrwYCAOf.svg\")","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { phoneStore } from '../../index'\nimport styles from './Phone.scss'\nimport { Session, SessionState, UserAgent, Inviter } from 'sip.js'\nimport {\n  NEW_ATTENDED_TRANSFER,\n  attendedTransferRequest,\n  attendedTransferCancel,\n  attendedTransferReady,\n  attendedTransferPending,\n  attendedTransferSuccess,\n  attendedTransferFail,\n  holdCallRequest,\n  stateChange,\n  closeSession\n} from '../../actions/sipSessions';\nimport Phone from './Phone'\nimport { getFullNumber } from '../../util/sessions'\nimport attendedIcon from '../../assets/phone_in_talk-24px.svg'\nimport cancelIcon from '../../assets/call_end-24px.svg'\nimport connectIcon from '../../assets/arrow_forward-24px.svg'\n\ninterface Props {\n  session: Session\n  userAgent: UserAgent\n  destination: string\n  started: Function\n  attendedTransferRequest: Function\n  attendedTransferCancel: Function\n  attendedTransferReady: Function\n  attendedTransferPending: Function\n  attendedTransferSuccess: Function\n  attendedTransferFail: Function\n  holdCallRequest: Function\n  stateChange: Function\n  closeSession: Function\n}\n\nclass AttendedTransfer extends React.Component<Props> {\n  state = {\n    attendedTransferSessionPending: null,\n    attendedTransferSessionReady: null\n  }\n\n  attendedTransferCall() {\n    this.holdAll()\n    this.props.attendedTransferRequest()\n    const target = UserAgent.makeURI(\n      `sip:${getFullNumber(this.props.destination)}@sip.reper.io;user=phone`\n    )\n    if (target) {\n      const inviter = new Inviter(this.props.userAgent, target)\n      const outgoingSession: Session = inviter\n      phoneStore.dispatch({ type: NEW_ATTENDED_TRANSFER, payload: outgoingSession })\n      this.setState({ attendedTransferSessionPending: outgoingSession })\n\n      outgoingSession.stateChange.addListener((newState: SessionState) => {\n        switch (newState) {\n          case SessionState.Initial:\n          case SessionState.Establishing:\n            this.props.stateChange(newState, outgoingSession.id)\n            //add new session to local state\n            this.props.attendedTransferPending()\n\n            break\n          case SessionState.Established:\n            this.setState({ attendedTransferSessionReady: outgoingSession })\n            this.props.attendedTransferReady()\n\n            this.setState({ attendedTransferSessionPending: false })\n            this.props.stateChange(newState, outgoingSession.id)\n\n            break\n          case SessionState.Terminating:\n            this.props.stateChange(newState, outgoingSession.id)\n            break\n          case SessionState.Terminated:\n            this.props.stateChange(newState, outgoingSession.id)\n            this.attendedTransferClear()\n\n            setTimeout(() => {\n              this.props.closeSession(outgoingSession.id)\n            }, 5000)\n            break\n          default:\n            console.log(`Unknown session state change: ${newState}`)\n            break\n        }\n      })\n      outgoingSession.invite().catch((error: Error) => {\n        this.props.attendedTransferFail()\n        console.log(error)\n      })\n    } else {\n      this.props.attendedTransferFail()\n\n    }\n  }\n\n  attendedTransferClear() {\n    this.setState({ attendedTransferSessionPending: null })\n    this.setState({ attendedTransferSessionReady: null })\n    this.props.started(false)\n  }\n\n  //refers the session in local state\n  connectAttendedTransfer(attendedTransferSession: any) {\n    try {\n      this.props.session.refer(attendedTransferSession)\n      this.props.attendedTransferSuccess()\n\n      this.setState({ attendedTransferSessionReady: null })\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  cancelAttendedTransfer(attendedTransferSession: any) {\n    attendedTransferSession.cancel()\n    this.props.attendedTransferCancel()\n\n    this.setState({ attendedTransferSessionPending: null })\n    this.setState({ attendedTransferSession: null })\n  }\n\n  holdAll() {\n    const state = phoneStore.getState()\n\n    //@ts-ignore\n    const onHolds = state.sipSessions.onHold\n\n    //@ts-ignore\n    const sessions = state.sipSessions.sessions\n\n    if (this.props.session.id in onHolds === false) {\n      try {\n        //@ts-ignore\n        this.props.holdCallRequest(this.props.session)\n\n        return\n      } catch (err) {\n        return\n      }\n    }\n  }\n\n  render() {\n    if (this.state.attendedTransferSessionReady) {\n      return (\n        <React.Fragment>{\n          // @ts-ignore\n          <Phone session={this.state.attendedTransferSessionReady} phoneConfig={{ disabledButtons: ['numpad', 'transfer'] }} />\n        }\n          <button\n            className={styles.transferButtons}\n            onClick={() => {\n              this.props.started(false)\n              this.connectAttendedTransfer(this.state.attendedTransferSessionReady)\n            }}>\n            <img src={connectIcon} />\n          </button>\n        </React.Fragment>\n\n      )\n    } else if (this.state.attendedTransferSessionPending) {\n      return (\n        <button\n          className={styles.endCallButton}\n          onClick={() => {\n            this.props.started(false)\n            this.cancelAttendedTransfer(this.state.attendedTransferSessionPending)\n          }}>\n          <img src={cancelIcon} />\n        </button>\n      )\n    } else {\n      return (\n        <button\n          className={styles.transferButtons}\n          onClick={() => {\n            this.props.started(true)\n            this.attendedTransferCall()\n          }}>\n          <img src={attendedIcon} />\n        </button>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  stateChanged: state.sipSessions.stateChanged,\n  sessions: state.sipSessions.sessions,\n  userAgent: state.sipAccounts.userAgent\n})\nconst actions = {\n  holdCallRequest,\n  attendedTransferRequest,\n  attendedTransferCancel,\n  attendedTransferReady,\n  attendedTransferPending,\n  attendedTransferSuccess,\n  attendedTransferFail,\n  stateChange,\n  closeSession,\n}\n\nexport default connect(mapStateToProps, actions)(AttendedTransfer)","/* loaded by smart-asset */\nexport default require(\"./dialpad-24px~cidqBzRK.svg\")","import * as React from 'react'\nimport Dialpad from './Dialpad'\nimport { connect } from 'react-redux'\nimport { Session, SessionState, UserAgent } from 'sip.js'\nimport { endCall } from '../../actions/sipSessions'\nimport Hold from './Hold'\nimport Mute from './Mute'\nimport BlindTranfer from './BlindTransfer'\nimport AttendedTransfer from './AttendedTransfer'\nimport styles from './Phone.scss'\nimport endCallIcon from '../../assets/call_end-24px.svg'\nimport dialpadIcon from '../../assets/dialpad-24px.svg'\nimport transferIcon from '../../assets/arrow_forward-24px.svg'\nimport { callDisconnect } from '../../util/TonePlayer'\nimport toneManager from '../../util/ToneManager'\nimport { statusMask, getDurationDisplay } from '../../util/sessions'\nimport { PhoneConfig } from '../../models'\ninterface Props {\n  session: Session\n  userAgent: UserAgent\n  endCall: Function\n  phoneConfig: PhoneConfig\n  deviceId: string\n}\n\nclass Phone extends React.Component<Props> {\n  state = {\n    dialpadOpen: false,\n    transferMenu: false,\n    ended: false,\n    transferDialString: '',\n    attendedTransferStarted: false,\n    duration: 0,\n    counterStarted: false\n  }\n\n  constructor(props: any) {\n    super(props)\n    this.attendedProcess = this.attendedProcess.bind(this);\n  }\n\n  componentDidUpdate(newProps: Props) {\n    if (newProps.session.state === SessionState.Established && !this.state.counterStarted) {\n      this.handleCounter()\n    }\n    if (\n      newProps.session.state === SessionState.Terminated &&\n      this.state.ended === false\n    ) {\n      this.setState({ ended: true })\n    }\n  }\n\n  endCall() {\n    if (this.props.session.state === SessionState.Established) {\n      this.props.session.bye()\n    } else if (\n      this.props.session.state === SessionState.Initial ||\n      this.props.session.state === SessionState.Establishing\n    ) {\n      toneManager.stopAll()\n      callDisconnect(this.props.deviceId)\n      // @ts-ignore\n\n      this.props.session.cancel()\n\n    }\n    this.setState({ ended: true })\n    setTimeout(() => {\n      this.props.session.dispose()\n      this.props.endCall(this.props.session.id)\n    }, 5000)\n  }\n\n  attendedProcess(bool: boolean) {\n    this.setState({ attendedTransferStarted: bool })\n  }\n\n  handleCounter() {\n    if (this.props.session && this.props.session.state !== SessionState.Terminated) {\n      if (this.state.counterStarted === false) {\n        this.setState({ counterStarted: true })\n      }\n      setTimeout(() => {\n        this.setState({ duration: this.state.duration + 1 })\n        this.handleCounter()\n      }, 1000)\n    }\n  }\n\n  render() {\n    const { state, props } = this\n    return (\n      <React.Fragment>\n        <hr style={{ width: '100%' }} />\n        <div>{\n          // @ts-ignore\n          `${props.session.remoteIdentity.uri.normal.user} - ${props.session.remoteIdentity._displayName}`}\n        </div>\n        <br/>\n        <div>{statusMask(props.session.state)}</div>\n        <br/>\n        {(this.props.session.state === SessionState.Initial ||\n          this.props.session.state === SessionState.Establishing) ?\n          null : <div>{getDurationDisplay(this.state.duration)}</div>\n        }\n        {\n          state.ended ? null :\n            <React.Fragment>\n              <Dialpad open={state.dialpadOpen} session={props.session} />\n              <div className={styles.actionsContainer}>\n                {props.phoneConfig.disabledButtons.includes('mute') ? null :\n                  <Mute session={props.session} />}\n                <button\n                  className={styles.endCallButton}\n                  disabled={state.ended}\n                  onClick={() => this.endCall()}\n                >\n                  <img src={endCallIcon} />\n                </button>\n                {props.phoneConfig.disabledButtons.includes('hold') ? null :\n                  <Hold session={props.session} />}\n                {props.phoneConfig.disabledButtons.includes('numpad') ? null :\n                  <div\n                    id={styles.actionButton}\n                    className={state.dialpadOpen ? styles.on : ''}\n                    onClick={() => this.setState({ dialpadOpen: !state.dialpadOpen })}\n                  >\n                    <img src={dialpadIcon} />\n                  </div>}\n                {props.phoneConfig.disabledButtons.includes('transfer') ? null :\n                  <div\n                    id={styles.actionButton}\n                    className={state.transferMenu ? styles.on : ''}\n                    onClick={() => this.setState({ transferMenu: !state.transferMenu })}\n                  >\n                    <img src={transferIcon} />\n                  </div>}\n                <div\n                  id={styles.transferMenu}\n                  className={state.transferMenu ? '' : styles.closed}\n                >\n                  <input\n                    id={styles.transferInput}\n                    onChange={(e) =>\n                      this.setState({ transferDialString: e.target.value })\n                    }\n                    placeholder=\"Enter the transfer destination...\"\n                  />\n                  {this.state.attendedTransferStarted ? null :\n                    <BlindTranfer\n                      destination={state.transferDialString}\n                      session={props.session}\n                    />}\n                  <AttendedTransfer\n                    started={this.attendedProcess}\n                    destination={state.transferDialString}\n                    session={props.session}\n                  />\n                </div>\n              </div>\n              <audio id={this.props.session.id} autoPlay />\n\n            </React.Fragment>\n        }\n      </React.Fragment>\n    )\n  }\n}\nconst mapStateToProps = (state: any) => ({\n  stateChanged: state.sipSessions.stateChanged,\n  sessions: state.sipSessions.sessions,\n  userAgent: state.sipAccounts.userAgent,\n  deviceId: state.device.primaryAudioOutput\n\n})\nconst actions = {\n  endCall\n}\nexport default connect(mapStateToProps, actions)(Phone)","/* loaded by smart-asset */\nexport default require(\"./call-24px~AGZUevvA.svg\")","import * as React from 'react'\nimport { Invitation } from 'sip.js'\nimport { connect } from 'react-redux'\nimport styles from './Phone.scss'\nimport { acceptCall, declineCall } from '../../actions/sipSessions'\nimport acceptIcon from '../../assets/call-24px.svg'\nimport declineIcon from '../../assets/call_end-24px.svg'\nimport toneManager from '../../util/ToneManager'\n\nconst ring = require('./assets/ring.mp3')\ninterface Props {\n  session: Invitation,\n  acceptCall: Function,\n  declineCall: Function\n}\n\nclass Incoming extends React.Component<Props> {\n\n  componentDidMount() {\n    console.log('this is the session')\n    console.log(this.props.session)\n    toneManager.stopAll()\n    toneManager.playRing('ringtone')\n\n  }\n\n  handleAccept() {\n    toneManager.stopAll()\n    this.props.session.accept()\n    this.props.acceptCall(this.props.session)\n\n  }\n\n  handleDecline() {\n    toneManager.stopAll()\n    this.props.session.reject()\n    this.props.declineCall(this.props.session)\n  }\n\n  render() {\n    const props = this.props\n    return <div id={styles.incoming}>\n      { // @ts-ignore\n        `Incoming: ${props.session.remoteIdentity.uri.normal.user} - ${props.session.remoteIdentity._displayName}`\n      }\n      <div className={styles.endCallButton} onClick={() => this.handleDecline()} ><img src={declineIcon} /></div>\n      <div className={styles.startCallButton} onClick={() => this.handleAccept()} ><img src={acceptIcon} /></div>\n      <audio id='ringtone' loop >\n        <source src={ring} type=\"audio/mpeg\" />\n      </audio>\n      <audio id={this.props.session.id} autoPlay />\n    </div>\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  stateChanged: state.sipSessions.stateChanged,\n})\nconst actions = {\n  acceptCall, declineCall\n}\nexport default connect(mapStateToProps, actions)(Incoming)","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport Phone from './phone/Phone'\nimport Incoming from './phone/Incoming'\nimport { PhoneConfig } from '../models'\n\nconst getSessions = (sessions: any, phoneConfig: PhoneConfig, attendedTransfers: Array<string>) => {\n  const elements = []\n  for (const session in sessions) {\n    if (attendedTransfers.includes(session)) continue\n    elements.push(\n      <Phone session={sessions[session]} key={session} phoneConfig={phoneConfig} />\n    )\n  }\n  return elements\n}\n\nconst getIncomingCallReferrals = (sessions: any) => {\n  const elements = []\n  for (const session in sessions) {\n    elements.push(<Incoming session={sessions[session]} key={session} />)\n  }\n  return elements\n}\n\ninterface Props {\n  sessions: any\n  incomingCalls: any\n  phoneConfig: PhoneConfig\n  attendedTransfers: Array<string>\n}\n\nclass PhoneSessions extends React.Component<Props> {\n  render() {\n    return <React.Fragment>\n      {/* {<Phone \n        // @ts-ignore\n        session={{}} key={0} />} */}\n      {getIncomingCallReferrals(this.props.incomingCalls)}\n      {getSessions(this.props.sessions, this.props.phoneConfig, this.props.attendedTransfers)}\n    </React.Fragment>\n  }\n}\nconst mapStateToProps = (state: any) => ({\n  sessions: state.sipSessions.sessions,\n  incomingCalls: state.sipSessions.incomingCalls,\n  attendedTransfers: state.sipSessions.attendedTransfers\n})\nconst PS = connect(mapStateToProps)(PhoneSessions)\nexport default PS","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport SIPAccount from '../lib/SipAccount'\nimport styles from './Dialstring.scss'\nimport callIcon from '../assets/call-24px.svg'\n\ninterface Props {\n  sipAccount: SIPAccount\n}\n\nclass Dialstring extends React.Component<Props> {\n  state = {\n    currentDialString: ''\n  }\n  handleDial() {\n    if (!this.checkDialstring()) {\n      this.props.sipAccount.makeCall(`${this.state.currentDialString}`)\n    }\n  }\n  checkDialstring() {\n    return this.state.currentDialString.length === 0\n  }\n\n  render() {\n    return (\n      <div className={styles.dialstringContainer}>\n        <input\n          className={styles.dialInput}\n          onKeyPress={(e) => {\n            if (e.key === 'Enter') {\n              this.handleDial()\n              e.preventDefault()\n            }\n          }}\n          placeholder=\"Enter the number to dial...\"\n          onChange={(e) => this.setState({ currentDialString: e.target.value })}\n        />\n        <button\n          className={styles.dialButton}\n          disabled={this.checkDialstring()}\n          onClick={() => this.handleDial()}\n        >\n          <img src={callIcon} />\n        </button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  sipAccount: state.sipAccounts.sipAccount\n})\n\nconst actions = {\n}\n\nconst D = connect(mapStateToProps, actions)(Dialstring)\nexport default D\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","import { Action } from './models'\nimport {\n  NEW_SESSION,\n  NEW_ATTENDED_TRANSFER,\n  CLOSE_SESSION,\n  SIPSESSION_STATECHANGE,\n  INCOMING_CALL,\n  ACCEPT_CALL,\n  DECLINE_CALL,\n  SIPSESSION_HOLD_REQUEST,\n  SIPSESSION_UNHOLD_REQUEST\n} from '../actions/sipSessions'\nconst sipSessions = (\n  state = {\n    sessions: {},\n    incomingCalls: {},\n    stateChanged: 0,\n    onHold: [],\n    attendedTransfers: []\n  },\n  action: Action\n) => {\n  const { type, payload } = action\n  switch (type) {\n    case INCOMING_CALL:\n      console.log('Incoming call')\n      return {\n        ...state,\n        incomingCalls: { ...state.incomingCalls, [payload.id]: payload }\n      }\n    case NEW_SESSION:\n      console.log('New session added')\n      return {\n        ...state,\n        sessions: { ...state.sessions, [payload.id]: payload }\n      }\n    case NEW_ATTENDED_TRANSFER:\n      return {\n        ...state,\n        sessions: { ...state.sessions, [payload.id]: payload },\n        attendedTransfers: [...state.attendedTransfers, payload.id]\n      }\n    case ACCEPT_CALL:\n      const acceptedIncoming: any = { ...state.incomingCalls }\n      delete acceptedIncoming[payload.id]\n      return {\n        ...state,\n        incomingCalls: acceptedIncoming,\n        sessions: { ...state.sessions, [payload.id]: payload }\n      }\n    case DECLINE_CALL:\n      const declinedIncoming: any = { ...state.incomingCalls }\n      delete declinedIncoming[payload.id]\n      return {\n        ...state,\n        incomingCalls: declinedIncoming\n      }\n    case SIPSESSION_STATECHANGE:\n      return {\n        ...state,\n        stateChanged: state.stateChanged + 1\n      }\n    case CLOSE_SESSION:\n      const newIncoming: any = { ...state.incomingCalls }\n      const newSessions: any = { ...state.sessions }\n      delete newSessions[payload]\n      delete newIncoming[payload]\n      const endHold = [...state.onHold].filter((session) => session !== payload)\n\n      return {\n        ...state,\n        sessions: newSessions,\n        incomingCalls: newIncoming,\n        onHold: endHold\n      }\n    case SIPSESSION_HOLD_REQUEST:\n      return {\n        ...state,\n        onHold: [...state.onHold, payload]\n      }\n    case SIPSESSION_UNHOLD_REQUEST:\n      const newHold = [...state.onHold].filter((session) => session !== payload)\n\n      return {\n        ...state,\n        onHold: newHold\n      }\n    default:\n      return state\n  }\n}\nexport default sipSessions\n","import { combineReducers } from 'redux'\nimport sipSessions from './sipSessions'\nimport sipAccounts from './sipAccounts'\nimport device from './device'\nimport config from './config'\n\nconst reducers: any = combineReducers({ sipAccounts, sipSessions, device, config })\n\nexport default reducers","import { Action } from './models'\nimport { NEW_USERAGENT, NEW_ACCOUNT } from '../actions/sipAccounts'\nconst sipAccounts = (\n  state = {\n    sipAccount: null,\n    userAgent: null,\n    status: ''\n  },\n  action: Action\n) => {\n  const { type, payload } = action\n  switch (type) {\n    case NEW_ACCOUNT:\n      return {\n        ...state,\n        sipAccount: action.payload\n      }\n    case NEW_USERAGENT:\n      return {\n        ...state,\n        userAgent: payload\n      }\n    default:\n      return state\n  }\n}\nexport default sipAccounts\n","import { Action } from './models'\nimport {\n    AUDIO_INPUT_DEVICES_DETECTED,\n    AUDIO_OUTPUT_DEVICES_DETECTED,\n    SET_PRIMARY_INPUT,\n    SET_PRIMARY_OUTPUT\n} from '../actions/device'\nconst device = (\n    state = {\n        audioInput: [],\n        audioOutput: [],\n        primaryAudioOutput: 'default',\n        primaryAudioInput: 'default'\n    },\n    action: Action\n) => {\n    const { type, payload } = action\n    switch (type) {\n        case AUDIO_INPUT_DEVICES_DETECTED:\n            return {\n                ...state,\n                audioInput: payload\n            }\n        case AUDIO_OUTPUT_DEVICES_DETECTED:\n            return {\n                ...state,\n                audioOutput: payload\n            }\n        case SET_PRIMARY_OUTPUT:\n            return {\n                ...state,\n                primaryAudioOutput: payload\n            }\n        case SET_PRIMARY_INPUT:\n            return {\n                ...state,\n                primaryAudioInput: payload\n            }\n        default:\n            return state\n    }\n}\nexport default device\n","import { Action } from './models'\nimport { SET_CREDENTIALS, SET_CONFIG } from '../actions/config'\nconst config = (state = {\n  uri: '',\n  password: '',\n  phoneConfig: {}\n}, action: Action) => {\n  switch (action.type) {\n    case SET_CONFIG:\n      return {\n        ...state, phoneConfig: action.payload\n      }\n    case SET_CREDENTIALS:\n      return {\n        ...state,\n        uri: action.payload.uri,\n        password: action.payload.password,\n      }\n    default:\n      return state\n  }\n}\nexport default config","import { composeWithDevTools } from 'redux-devtools-extension'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport reducers from '../reducers/index'\n\nconst middleware = [thunk]\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['device']\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducers)\n\nexport const defaultStore = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\nexport const persistor = persistStore(defaultStore)\n\n\n","import * as React from 'react'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport styles from './styles.scss'\nimport SipWrapper from './SipWrapper'\nimport Status from './components/Status'\nimport PhoneSessions from './components/PhoneSessions'\nimport Dialstring from './components/Dialstring'\nimport { SipConfig, SipCredentials, PhoneConfig } from './models'\n\nimport { defaultStore, persistor } from './store/configureStore'\n\ninterface Props {\n  width: number\n  height: number\n  name: string\n  phoneConfig: PhoneConfig\n  sipCredentials: SipCredentials\n  sipConfig: SipConfig\n  containerStyle: any\n}\n\nexport const phoneStore = defaultStore\n\nexport const ReactSipPhone = ({\n  name,\n  width = 300,\n  height = 600,\n  phoneConfig = { disabledButtons: [] },\n  sipConfig,\n  sipCredentials,\n  containerStyle = {}\n}: Props) => {\n  //If no store is passed into component, default store is used\n  return (\n    <Provider store={phoneStore}>\n      <PersistGate loading={null} persistor={persistor}>\n        <SipWrapper sipConfig={sipConfig} sipCredentials={sipCredentials} phoneConfig={phoneConfig}>\n          <div className={styles.container}\n            style={{\n              ...containerStyle,\n              width: `${width < 300 ? 300 : width}px`,\n              height: `${height < 600 ? 600 : height}px`\n            }}>\n            <Status name={name} />\n            <Dialstring />\n            <PhoneSessions phoneConfig={phoneConfig} />\n            <audio id='tone' autoPlay />\n          </div>\n        </SipWrapper>\n      </PersistGate>\n    </Provider>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/settings-24px~HQuidduc.83d38c97.svg\";","module.exports = __webpack_public_path__ + \"static/media/mic-24px~xExSpqQP.58e127e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/volume_up-24px~qJQJhpOr.aed75bc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone_paused-24px~TWxpQtZf.84161f8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/mic_off-24px~bjejwOqd.ba53335f.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow_forward-24px~UJhdZXVe.66bdaa19.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone_in_talk-24px~DQfZjkDQ.77e3ccda.svg\";","module.exports = __webpack_public_path__ + \"static/media/call_end-24px~HrwYCAOf.39365fed.svg\";","module.exports = __webpack_public_path__ + \"static/media/dialpad-24px~cidqBzRK.348fe506.svg\";","module.exports = __webpack_public_path__ + \"static/media/call-24px~AGZUevvA.f3b7d629.svg\";","module.exports = __webpack_public_path__ + \"static/media/ring.69b29a4c.mp3\";","import React from 'react'\n\nimport { ReactSipPhone, reactSipPhoneReducers } from 'react-sip-phone'\nimport 'react-sip-phone/dist/index.css'\n\nconst urlParams = new URLSearchParams(window.location.search)\nconst sipuri = urlParams.get('sipuri')\nconst password = urlParams.get('password')\nconst websocket = urlParams.get('websocket')\nconst name = urlParams.get('name')\n\nconst App = () => {\n  return (\n    <ReactSipPhone\n      name={name || ''}\n      sipCredentials={{\n        sipuri: sipuri || '',\n        password: password || ''\n      }}\n      sipConfig={{\n        websocket: websocket || '',\n        defaultCountryCode: '1'\n      }}\n      width={0}\n    />\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}